{"version":3,"file":"protoux.esm.js","sources":["../src/protoux.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                                ProtoUX (PUX)                                 *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n//  throwError,\n    quoted,\n    ValueIsOrdinal,\n    ValueIsString, ValueIsNonEmptyString,\n    ValueIsPlainObject,\n    ValueIsArray, ValueIsListSatisfying,\n    ValueIsFunction,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    allowOrdinal,\n    allowTextline,\n    expectArray, allowListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowURL,\n  } from 'javascript-interface-library'\n\n  import { render, html, Component } from 'htm/preact'\n\n  import hyperactiv from 'hyperactiv'\n  const  { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** install stylesheet for ProtoUX ****/\n\n  const Stylesheet = document.createElement('style')\n    Stylesheet.setAttribute('id','ProtoUX')\n    Stylesheet.innerHTML = `/*******************************************************************************\n*                                                                              *\n*                                ProtoUX (PUX)                                 *\n*                                                                              *\n*******************************************************************************/\n\n  .PUX {\n    display:block; position:absolute;\n    margin:0px;\n    background:none;\n    border:none; border-radius:0px;\n    box-shadow:none;\n    padding:0px;\n  }\n\n  .PUX.Screen {\n    background:white; color:black;\n    font-family:'Source Sans Pro','Helvetica Neue',Helvetica,Arial,sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n    text-align:left; text-shadow:none;\n  }\n\n  .textured { background-image:repeat }\n\n  .vertically-centered {\n    display:flex; align-items:center;\n  }\n\n  .disabled, [disabled] { opacity:0.3 }\n  .readonly             { background:none }\n  .no-pointer-events    { pointer-events:none }\n\n  .scrollable   { overflow:scroll }\n  .scrollable-x { overflow-x:scroll; overflow-y:hidden }\n  .scrollable-y { overflow-x:hidden; overflow-y:scroll }\n\n  .PUX.Box       { background-color:white }\n  .PUX.Container {}\n  .PUX.Group     {}\n\n  .PUX.Title    { font-size:20px; font-weight:normal; padding:0px 0px 0px 0px; text-align:left }\n  .PUX.Subtitle { font-size:16px; font-weight:normal; padding:0px 0px 0px 0px; text-align:left }\n  .PUX.Label    { font-size:14px; font-weight:bold;   padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Textline { font-size:14px; font-weight:normal; padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Hint     { font-size:12px; font-weight:normal; padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Text     { font-size:14px; font-weight:normal; padding:2px 0px 0px 0px; text-align:justify }\n\n  .PUX.HTMLView  {}\n  .PUX.TextView  {}\n  .PUX.ImageView { object-fit:contain; object-position:center center }\n  .PUX.WebView   {}\n\n  .PUX.Icon { width:24px; height:24px }\n\n  .PUX.PseudoDropDown { width:24px; height:24px }\n  .PUX.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n\n  .PUX.Button > button, .PUX.Checkbox > input, .PUX.Radiobutton > input,\n  .PUX.Gauge > meter, .PUX.Progressbar > progress, .PUX.Slider > input,\n  .PUX.TextlineInput > input, .PUX.PasswordInput > input,\n  .PUX.NumberInput > input, .PUX.PhoneNumberInput > input,\n  .PUX.EMailAddressInput > input, .PUX.URLInput > input,\n  .PUX.TimeInput > input, .PUX.DateTimeInput > input, .PUX.DateInput > input,\n  .PUX.WeekInput > input, .PUX.MonthInput > input, .PUX.SearchInput > input,\n  .PUX.ColorInput > input, .PUX.DropDown > select, .PUX.FileInput > input,\n  .PUX.TextInput > textarea {\n    left:0px; top:0px; width:100%; height:100%;\n    margin:0px; padding:0px;\n    background:transparent; color:inherit;\n  }\n\n  .PUX.TextlineInput > input, .PUX.PasswordInput > input,\n  .PUX.NumberInput > input, .PUX.PhoneNumberInput > input,\n  .PUX.EMailAddressInput > input, .PUX.URLInput > input,\n  .PUX.TimeInput > input, .PUX.DateTimeInput > input, .PUX.DateInput > input,\n  .PUX.WeekInput > input, .PUX.MonthInput > input, .PUX.SearchInput > input,\n  .PUX.ColorInput > input, .PUX.DropDown > select, .PUX.FileInput > input,\n  .PUX.TextInput > textarea {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff; padding:0px 2px 0px 2px;\n  }\n\n  .PUX.TextlineInput > input:read-only, .PUX.PasswordInput > input:read-only,\n  .PUX.NumberInput > input:read-only, .PUX.PhoneNumberInput > input:read-only,\n  .PUX.EMailAddressInput > input:read-only, .PUX.URLInput > input:read-only,\n  .PUX.TimeInput > input:read-only, .PUX.DateTimeInput > input:read-only,\n  .PUX.DateInput > input:read-only, .PUX.WeekInput > input:read-only,\n  .PUX.MonthInput > input:read-only, .PUX.SearchInput > input:read-only,\n  .PUX.ColorInput > input:read-only, .PUX.DropDown > select:read-only,\n  .PUX.FileInput > input:read-only, .PUX.TextInput > textarea:read-only {\n    background:transparent;\n  }\n\n  .PUX.Button > button {\n    background:white;\n    border:solid 1px black; border-radius:4px;\n    background:transparent; color:inherit;\n  }\n\n  .PUX.FileInput {\n    color:lightgray;\n    border:solid 1px black; border-radius:3px;\n  }\n  .PUX.FileInput > span {\n    display:flex; align-items:center; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    padding:0px 2px 0px 2px; text-overflow:ellipsis;\n  }\n\n  .PUX.TextInput > textarea { border:none; background:#e8f0ff; padding:2px }\n  .PUX.TextInput.no-resize > textarea { resize:none }\n\n  .PUX.horizontalSeparator {\n    height:1px; margin:0px; margin-top:7px;\n    border:none; border-top:solid 1px black\n  }\n  .PUX.verticalSeparator {\n    width:1px; margin:0px; margin-left:7px;\n    border:none; border-left:solid 1px black\n  }\n\n  .PUX.FileDropArea {/*\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;*/\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD;\n  }\n\n  .PUX.FileDropArea * { pointer-events:none }\n\n  .PUX.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n\n  .PUX.Accordion {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:auto;\n  }\n\n  .PUX.Fold {\n    display:block; position:relative;\n    left:0px; top:0px; width:100%; bottom:auto;\n  }\n\n  .PUX.Fold-Header {\n    display:block; position:relative;\n    width:100%; height:30px; background:#EEEEEE; border:none;\n    border-top:   solid 1px #FFFFFF;\n    border-bottom:solid 1px #AAAAAA;\n  }\n\n  .PUX.Fold-Expander {\n    left:2px; top:2px; width:24px; height:24px;\n  }\n\n  .PUX.Fold-Title {\n    left:30px; top:0px; bottom:0px; right:0px;\n    font-size:14px; font-weight:bold; color:black; line-height:30px;\n  }\n\n  .PUX.Fold-Content {\n    display:block; position:relative;\n    left:0px; top:0px; width:100%; height:auto;\n  }\n  .PUX.Deck {}\n\n  .PUX.Card {\n    left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto;\n    border:none;\n  }\n  .PUX.TabStrip {\n    display:flex; flex-flow:row nowrap; align-items:stretch;\n  }\n\n  .PUX.Tab {\n    display:block; position:relative;\n    left:0px; top:0px; height:100%; width:auto;\n    border:none; border-width:0px 0px 4px 0px;\n  }\n  .PUX.Tab.active { border-style:solid; border-color:black }\n\n  .PUX.Tab > * { pointer-events:none }\n\n  .PUX.FlatListView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:scroll; overflow-x:auto; overflow-y:scroll;\n  }\n\n  .PUX.FlatListView > div {\n    display:block; position:relative; overflow:hidden; flex:0 0 auto;\n    left:0px; top:0px; width:auto; height:22px; line-height:22px;\n    background:none;\n    border:none; border-bottom:solid 1px light-gray;\n    white-space:nowrap; text-overflow:ellipsis;\n    user-select:none;\n  }\n\n  .PUX.FlatListView > div:last-child {\n    border:none; border-bottom:solid 1px transparent;\n  }\n\n  .PUX.FlatListView > div.selected {\n    background:dodgerblue; color:white;\n  }\n\n\n  .PUX.NestedListView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:scroll; overflow-x:auto; overflow-y:scroll;\n  }\n\n  .PUX.NestedListView .ItemView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n      position:relative; overflow:hidden; flex:0 0 auto;\n    left:0px; top:0px; width:auto; height:auto;\n    background:none; border:none;\n    user-select:none;\n  }\n\n  .PUX.NestedListView .ItemLine {\n    display:flex; flex-flow:row nowrap; align-items:stretch;\n      position:relative; flex:0 0 auto;\n    height:22px; line-height:22px;\n    white-space:nowrap; text-overflow:ellipsis;\n  }\n\n  .PUX.NestedListView .ItemIcon {\n    display:inline-block; position:relative;\n    margin-top:6px; width:14px; height:10px;\n    pointer-events:none;\n  }\n\n  .PUX.NestedListView .ItemExpander {\n    display:inline-block; position:relative;\n    margin-top:4px; width:14px; height:14px;\n    pointer-events:auto;\n  }\n\n  .PUX.NestedListView .ItemLabel {\n    display:inline-block; position:relative; flex:1 0 auto;\n    pointer-events:none;\n  }\n\n  .PUX.NestedListView .ItemLine.selected > .ItemLabel {\n    background:dodgerblue; color:white;\n  }\n\n  .PUX.ModalLayer {\n    display:block; position:absolute;\n    background:rgba(0,0,0,0.3); border:none;\n  }\n\n\n  .PUX.Dialog, .PUX.ResizableDialog {\n    display:block; position:absolute;\n    border:solid 1px #000000; border-radius:4px;\n    background:white; color:black;\n    box-shadow:0px 0px 10px 0px rgba(0,0,0,0.3);\n  }\n\n  .PUX.Dialog > .Titlebar, .PUX.ResizableDialog > .Titlebar {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; right:0px; height:30px;\n    background:#EEEEEE; border:none; border-radius:3px 3px 0px 0px;\n    user-select:none;\n  }\n\n  .PUX.Dialog > .Titlebar > .Title, .PUX.ResizableDialog > .Titlebar > .Title {\n    display:block; position:absolute;\n    left:6px; top:3px; right:30px; height:18px;\n    border:none;\n    font-weight:bold; color:black;\n    user-select:none; pointer-events:none;\n  }\n\n  .PUX.Dialog > .Titlebar > .CloseButton, .PUX.ResizableDialog > .Titlebar > .CloseButton {\n    display:block; position:absolute;\n    top:0px; right:0px; width:30px; height:30px;\n    border:none;\n    user-select:none;\n  }\n\n  .PUX.ResizableDialog > .ContentPane {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:9px;\n    border:none;\n  }\n\n  .PUX.ResizableDialog > .leftResizer {\n    display:block; position:absolute;\n    left:0px; bottom:0px; width:30px; height:9px;\n    border:none; border-top:solid 1px black; border-right:solid 1px black;\n    border-radius:0px 0px 0px 3px;\n    cursor:nesw-resize;\n  }\n\n  .PUX.ResizableDialog > .middleResizer {\n    display:block; position:absolute;\n    left:30px; bottom:0px; right:30px; height:9px;\n    border:none; border-top:solid 1px black;\n    border-radius:0px;\n    cursor:ns-resize;\n  }\n\n  .PUX.ResizableDialog > .rightResizer {\n    display:block; position:absolute;\n    bottom:0px; right:0px; width:30px; height:9px;\n    border:none; border-left:solid 1px black; border-top:solid 1px black;\n    border-radius:0px 0px 3px 0px;\n    cursor:nwse-resize;\n  }\n\n\n\n/**** centered ****/\n\n  .centered {\n    display:block; position:relative;\n    width:100%; height:100%; max-height:240px;\n  }\n\n  .centered > * {\n    display:block; position:absolute;\n    left:50%; top:50%;\n    transform:translate(-55%,-50%);\n    white-space:nowrap;\n  }\n\n`\n  document.head.appendChild(Stylesheet)\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\ndebugger\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n/**** DragRecognizerFor ****/\n\n  const DragRecognizerForWidget:WeakMap<Indexable,Function> = new WeakMap()\n\n  export function DragRecognizerFor (\n    Widget:Indexable, OptionSet:Indexable\n  ):Function {\n    let DragRecognizer = DragRecognizerForWidget.get(Widget)\n    if (DragRecognizer != null) { return DragRecognizer }\n\n    function DummyCallback () {}\n\n    function consumeEvent (Event:Event):void {\n      Event.stopImmediatePropagation()\n      Event.preventDefault()      // prevent mouse event from being sent as well\n    }\n\n/*C*/ let PointerTarget:HTMLElement|undefined\n/*C*/        // workaround for undesired disappearance of pointer capture target\n\n    let {\n      onlyFrom, neverFrom, Threshold = 0,\n      onDragStarted  = DummyCallback, onDragContinued = DummyCallback,\n      onDragFinished = DummyCallback, onDragCancelled = DummyCallback\n    } = OptionSet\n\n    let State = 'idle'                       // one of 'idle','observing','busy'\n    let x0:number,y0:number\n\n  /**** PointerEvent Handlers ****/\n\n    function onPointerDown (Event:PointerEvent):void {\n      if (! Event.isPrimary) { return }\n\n      if (onlyFrom != null) {\n        if (\n          (onlyFrom instanceof HTMLElement) && (onlyFrom !== Event.target) ||\n          (typeof onlyFrom === 'string') && ! (Event.target as HTMLElement).matches(onlyFrom)\n        ) { return }\n      }\n\n      if (neverFrom != null) {\n        if (\n          (neverFrom instanceof HTMLElement) && (neverFrom === Event.target) ||\n          (typeof neverFrom === 'string') && (Event.target as HTMLElement).matches(neverFrom)\n        ) { return }\n      }\n\n      if (Event.button === 0) {\n        (Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/ PointerTarget = Event.target as HTMLElement\n        if (State === 'idle') {\n          ;({ pageX:x0, pageY:y0 } = Event)\n          if (Threshold > 0) {\n            State = 'observing'    // wait for actual movement to start dragging\n          } else {\n            startDragging(Event)\n          }\n        }\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerMove (Event:PointerEvent):void {\n/*C*/ if ((State !== 'idle') && (Event.target !== PointerTarget)) {\n/*C*/   ;(Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/   PointerTarget = Event.target as HTMLElement\n/*C*/ console.log('ProtoUX: PointerTarget changed')\n/*C*/ }\n\n      if (State === 'observing') {                     // before actual dragging\n        let { pageX:x,pageY:y } = Event\n        if ((x0-x)**2 + (y0-y)**2 >= Threshold**2) { startDragging(Event) }\n      } else {\n        if (State === 'busy') { continueDragging(Event) }\n      }\n    }\n\n    function onPointerUp (Event:PointerEvent):void {\n      if (State === 'busy') {\n        finishDragging(Event)\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerCancel (Event:PointerEvent):void {\n      abortDragging(Event)\n    }\n\n  /**** State Transitions ****/\n\n    function startDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'busy'\n      let { pageX:x,pageY:y } = Event\n      onDragStarted(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function continueDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      let { pageX:x,pageY:y } = Event\n      onDragContinued(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function finishDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'idle'\n      let { pageX:x,pageY:y } = Event\n      onDragFinished(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n/*C*/ PointerTarget = undefined\n    }\n\n    function abortDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      if (State !== 'idle') {\n        const wasBusy = (State === 'busy')\n          State = 'idle'\n          ;(Event.target as HTMLElement).releasePointerCapture(Event.pointerId) // if called from ext.\n        if (wasBusy) { onDragCancelled(Math.round(x0),Math.round(y0), 0,0, Event) }\n      }\n/*C*/ PointerTarget = undefined\n    }\n\n  /**** return generic callback ****/\n\n    DragRecognizer = function (Event:PointerEvent):void {\n      switch (Event.type) {\n        case 'pointerdown':  return onPointerDown(Event)\n        case 'pointermove':  return onPointerMove(Event)\n        case 'pointerup':    return onPointerUp(Event)\n        case 'pointercancel':return onPointerCancel(Event)\n      }\n    }\n// @ts-ignore TS2339 allow assignment\n      DragRecognizer.abortDragging = abortDragging        // externally callable\n    DragRecognizerForWidget.set(Widget,DragRecognizer)\n\n    return DragRecognizer\n  }\n\n/**** DragClickRecognizerFor ****/\n\n  const DragClickRecognizerForWidget:WeakMap<Indexable,Function> = new WeakMap()\n\n  export function DragClickRecognizerFor (\n    Widget:Indexable, OptionSet:Indexable\n  ):Function {\n    let DragClickRecognizer = DragClickRecognizerForWidget.get(Widget)\n    if (DragClickRecognizer != null) { return DragClickRecognizer }\n\n    function DummyCallback () {}\n\n    function consumeEvent (Event:Event):void {\n      Event.stopImmediatePropagation()\n      Event.preventDefault()\n    }\n\n/*C*/ let PointerTarget:HTMLElement|undefined\n/*C*/        // workaround for undesired disappearance of pointer capture target\n\n    let {\n      onlyFrom, neverFrom, Threshold = 0,\n      onDragStarted  = DummyCallback, onDragContinued = DummyCallback,\n      onDragFinished = DummyCallback, onDragCancelled = DummyCallback,\n      onClicked = DummyCallback,\n      MultiClickTimeSpan = 300, onMultiClick = DummyCallback\n    } = OptionSet\n\n    let State = 'idle'                       // one of 'idle','observing','busy'\n    let x0:number,y0:number\n    let lastClickTime = 0, lastClickType = 0\n\n  /**** PointerEvent Handlers ****/\n\n    function onPointerDown (Event:PointerEvent):void {\n      if (! Event.isPrimary) { return }\n\n      if (onlyFrom != null) {\n        if (\n          (onlyFrom instanceof HTMLElement) && (onlyFrom !== Event.target) ||\n          (typeof onlyFrom === 'string') && ! (Event.target as HTMLElement).matches(onlyFrom)\n        ) { return }\n      }\n\n      if (neverFrom != null) {\n        if (\n          (neverFrom instanceof HTMLElement) && (neverFrom === Event.target) ||\n          (typeof neverFrom === 'string') && (Event.target as HTMLElement).matches(neverFrom)\n        ) { return }\n      }\n\n      if (Event.button === 0) {\n        (Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/ PointerTarget = Event.target as HTMLElement\n        if (State === 'idle') {\n          ;({ pageX:x0, pageY:y0 } = Event)\n          if (Threshold > 0) {\n            State = 'observing'    // wait for actual movement to start dragging\n          } else {\n            startDragging(Event)\n          }\n        }\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerMove (Event:PointerEvent):void {\n/*C*/ if ((State !== 'idle') && (Event.target !== PointerTarget)) {\n/*C*/   ;(Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/   PointerTarget = Event.target as HTMLElement\n/*C*/ console.log('ProtoUX: PointerTarget changed')\n/*C*/ }\n\n      if (State === 'busy')      { return continueDragging(Event) }\n      if (State === 'observing') {                     // before actual dragging\n        let { pageX:x,pageY:y } = Event\n        if ((x0-x)**2 + (y0-y)**2 >= Threshold**2) { startDragging(Event) }\n      }\n    }\n\n    function onPointerUp (Event:PointerEvent):void {\n      if (State === 'busy')      { return finishDragging(Event) }\n      if (State === 'observing') {\n        consumeEvent(Event)\n\n        State = 'idle'\n        onClicked(x0,y0, Event)\n\n        let now = Date.now()\n        if (now-lastClickTime < MultiClickTimeSpan) {\n          lastClickType += 1\n          if (lastClickType > 1) { onMultiClick(lastClickType, x0,y0, Event) }\n        } else {\n          lastClickType = 1\n        }\n        lastClickTime = now\n      }\n    }\n\n    function onPointerCancel (Event:PointerEvent):void {\n      abortDragging(Event)\n    }\n\n  /**** State Transitions ****/\n\n    function startDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'busy'\n      let { pageX:x,pageY:y } = Event\n      onDragStarted(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function continueDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      let { pageX:x,pageY:y } = Event\n      onDragContinued(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function finishDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'idle'\n      let { pageX:x,pageY:y } = Event\n      onDragFinished(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n/*C*/ PointerTarget = undefined\n    }\n\n    function abortDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      if (State !== 'idle') {\n        const wasBusy = (State === 'busy')\n          State = 'idle'\n          ;(Event.target as HTMLElement).releasePointerCapture(Event.pointerId) // if called from ext.\n        if (wasBusy) { onDragCancelled(Math.round(x0),Math.round(y0), 0,0, Event) }\n      }\n/*C*/ PointerTarget = undefined\n    }\n\n  /**** return generic callback ****/\n\n    DragClickRecognizer = function (Event:PointerEvent):void {\n      switch (Event.type) {\n        case 'pointerdown':  return onPointerDown(Event)\n        case 'pointermove':  return onPointerMove(Event)\n        case 'pointerup':    return onPointerUp(Event)\n        case 'pointercancel':return onPointerCancel(Event)\n      }\n    }\n// @ts-ignore TS2339 allow assignment\n      DragClickRecognizer.abortDragging = abortDragging   // externally callable\n    DragClickRecognizerForWidget.set(Widget,DragClickRecognizer)\n\n    return DragClickRecognizer\n  }\n\n//------------------------------------------------------------------------------\n//--                                 ProtoUX                                  --\n//------------------------------------------------------------------------------\n\n  export class ProtoUX {\n    private _IdPrefix:string\n\n    private _ImageFolder:string = ''\n\n    private _ScreenSet:Indexable    = {}         // just to satisfy the compiler\n    private _DialogSet:Indexable    = {}                                 // dto.\n    private _observed:Indexable     = observe({}, { deep:false })\n    private _UpdaterList:Function[] = []\n\n    private _StartScreen:Indexable   = {}        // just to satisfy the compiler\n    private _openScreen:Indexable    = {}                                // dto.\n    private _openDialogs:Indexable[] = []\n\n    private _View:PUX_View|undefined\n\n    private static _WidgetViewRegistry:Indexable = Object.create(null)\n\n  /**** constructor ****/\n\n    public constructor (IdPrefix:string = 'PUX') {\n      this._IdPrefix = IdPrefix\n    }\n\n  /**** ImageFolder - where to find image files ****/\n\n    public get ImageFolder ():string          { return this._ImageFolder }\n    public set ImageFolder (newFolder:string) {\n      newFolder = newFolder.trim()\n      if ((newFolder !== '') && ! newFolder.endsWith('/')) {\n        newFolder += '/'\n      }\n      this._ImageFolder = newFolder\n    }\n\n  /**** Style - represents the CSS stylesheet of a given ProtoUX project ****/\n\n    public get Style ():string {\n      const StyleId = this._IdPrefix + '-Style'\n      const Element = document.getElementById(StyleId)\n      return (Element == null ? '' : Element.innerHTML)\n    }\n\n    public set Style (newStyle:string) {\n      const StyleId = this._IdPrefix + '-Style'\n\n      let ImageFolder = this._ImageFolder\n      if (ImageFolder !== '') {\n        newStyle = newStyle.replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      let Element = document.getElementById(StyleId)\n      if (Element == null) {\n        Element = document.createElement('style')\n          Element.setAttribute('id',StyleId)\n        document.head.appendChild(Element)\n      }\n      Element.innerHTML = newStyle\n    }\n\n  /**** ScreenSet - represents the set of screens in a ProtoUX project ****/\n\n    public get ScreenSet ():Indexable       { return this._ScreenSet }\n    public set ScreenSet (newSet:Indexable) {\n      this._ScreenSet = newSet\n\n      for (let ScreenName in newSet) {    // sets a default \"StartScreen\", hacky\n        this._StartScreen = newSet[ScreenName]\n        break\n      }\n\n      for (let ScreenName in newSet) {      // prepare for \"packing\", if desired\n        Object.assign(newSet[ScreenName], { dX:0,dY:0, dW:0,dH:0 })\n      }\n    }\n\n  /**** observed - makes ProtoUX projects \"reactive\" ****/\n\n    public get observed ():Indexable  { return this._observed }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** ScreenNamed ****/\n\n    public ScreenNamed (ScreenName:string):Indexable|undefined {\n      return this._ScreenSet[ScreenName]\n    }\n\n  /**** existingScreenNamed ****/\n\n    public existingScreenNamed (ScreenName:string):Indexable {\n      const Screen = this._ScreenSet[ScreenName]\n      if (Screen == null) throwError(\n        'NoSuchScreen: a screen named ' + quoted(ScreenName) + ' does not exist'\n      )\n\n      return Screen\n    }\n\n  /**** packScreen ****/\n\n    public packScreen (\n      ScreenName:string, padX:number = 10, padY?:number\n    ):void {\n      if (padY == null) { padY = padX }\n\n      const Screen = this.existingScreenNamed(ScreenName)\n      if (Screen.packedGeometry == null) { return }\n\n      let { x,y, Width,Height } = Screen.packedGeometry\n        x -= padX; Width  += 2*padX\n        y -= padY; Height += 2*padY\n      Screen.Width  = Width\n      Screen.Height = Height\n\n      Screen.WidgetList.forEach((Widget:Indexable) => {\n        if (Widget.hidden) { return }\n\n        Widget.x -= x\n        Widget.y -= y\n      })\n    }\n\n  /**** openScreen ****/\n\n    public openScreen (ScreenName:string):void {\n      const Screen = this.existingScreenNamed(ScreenName)\n      if (this._openScreen === Screen) { return }\n\n      this._openScreen = Screen\n      this.rerender()\n    }\n\n  /**** closeScreen ****/\n\n    public closeScreen (ScreenName:string):void {\n      const Screen = this.ScreenNamed(ScreenName)\n      if (Screen == null) { return }\n\n      if (this._openScreen !== Screen) { return }\n\n      this._openScreen = this._StartScreen\n      this.rerender()\n    }\n\n  /**** ScreenIsOpen ****/\n\n    public ScreenIsOpen (ScreenName:string):boolean {\n      const Screen = this.existingScreenNamed(ScreenName)\n      return (this._openScreen === Screen)\n    }\n\n  /**** startWithScreen ****/\n\n    public startWithScreen (ScreenName:string):void {\n      this._StartScreen = this.existingScreenNamed(ScreenName)\n      this.openScreen(ScreenName)\n    }\n\n  /**** StartScreen ****/\n\n    public get StartScreen ():Indexable  { return this._StartScreen }\n    public set StartScreen (_:Indexable) { throwReadOnlyError('StartScreen') }\n\n  /**** extractAllDialogs ****/\n\n    public extractAllDialogs ():void {\n      for (let ScreenName in this._ScreenSet) {\n        const WidgetList = this._ScreenSet[ScreenName].WidgetList\n        for (let i = WidgetList.length-1; i >= 0; i--) {\n          const Widget = WidgetList[i]\n          if ((Widget.Type === 'Dialog') || (Widget.Type === 'ResizableDialog')) {\n            if (! ValueIsNonEmptyString(Widget.Name)) {\n              console.error('Dialog without name in screen \"' + ScreenName + '\"')\n              continue\n            }\n\n            if (Widget.Name in this._DialogSet) {\n              console.error('a dialog with name \"' + Widget.Name + '\" has already been registered')\n              continue\n            }\n\n            this._DialogSet[Widget.Name] = Widget\n            WidgetList.splice(i,1)\n          }\n        }\n      }\n    }\n\n  /**** DialogNamed ****/\n\n    public DialogNamed (DialogName:string):Indexable|undefined {\n      return this._DialogSet[DialogName]\n    }\n\n  /**** existingDialogNamed ****/\n\n    public existingDialogNamed (DialogName:string):Indexable {\n      const Dialog = this._DialogSet[DialogName]\n      if (Dialog == null) throwError(\n        'NoSuchDialog: a dialog named ' + quoted(DialogName) + ' does not exist'\n      )\n\n      return Dialog\n    }\n\n  /**** openDialog ****/\n\n    public openDialog (DialogName:string):void {\n      const Dialog = this.existingDialogNamed(DialogName)\n\n      const DialogIndex = this._openDialogs.indexOf(Dialog)\n      if (DialogIndex >= 0) {\n        if (DialogIndex === this._openDialogs.length-1) { return }\n        this._openDialogs.splice(DialogIndex,1)\n      }\n\n      this._openDialogs.push(Dialog)\n      this.rerender()\n\n      if (typeof Dialog.onOpen === 'function') { Dialog.onOpen(Dialog) }\n    }\n\n  /**** closeDialog ****/\n\n    public closeDialog (DialogName:string):void {\n      let Dialog = this.DialogNamed(DialogName)\n      if (Dialog == null) { return }\n\n      const DialogIndex = this._openDialogs.indexOf(Dialog)\n      if (DialogIndex < 0) { return }\n\n      this._openDialogs.splice(DialogIndex,1)\n      this.rerender()\n\n      if (typeof Dialog.onClose === 'function') { Dialog.onClose(Dialog) }\n    }\n\n  /**** DialogIsOpen ****/\n\n    public DialogIsOpen (DialogName:string):boolean {\n      let Dialog = this.existingDialogNamed(DialogName)\n      return (this._openDialogs.indexOf(Dialog) >= 0)\n    }\n\n  /**** openDialogs ****/\n\n    public get openDialogs ():Indexable[]  { return this._openDialogs.slice() }\n    public set openDialogs (_:Indexable[]) { throwReadOnlyError('openDialogs') }\n\n  /**** closeAllDialogs ****/\n\n    public closeAllDialogs ():void {\n      this._openDialogs.length = 0\n      this.rerender()\n    }\n\n  /**** DialogIsFrontMost ****/\n\n    public DialogIsFrontMost (DialogName:string):boolean {\n      let Dialog = this.existingDialogNamed(DialogName)\n      return (this._openDialogs.indexOf(Dialog) === this._openDialogs.length-1)\n    }\n\n  /**** bringDialogToFront ****/\n\n    public bringDialogToFront (DialogName:string):void {\n      this.openDialog(DialogName)\n    }\n\n  /**** WidgetNamed ****/\n\n    public WidgetNamed (WidgetName:string):Indexable|undefined {\n      const ScreenSet = this._ScreenSet\n      for (let ScreenName in ScreenSet) {\n        const WidgetList = ScreenSet[ScreenName].WidgetList\n        for (let i = 0, l = WidgetList.length; i < l; i++) {\n          if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n        }\n      }\n      return undefined\n    }\n\n  /**** existingWidgetNamed ****/\n\n    public existingWidgetNamed (WidgetName:string):Indexable {\n      const Widget = this.WidgetNamed(WidgetName)\n      if (Widget == null) throwError(\n        'NoSuchWidget: a widget named ' + quoted(WidgetName) + ' does not exist'\n      )\n\n      return Widget\n    }\n\n  /**** WidgetOnScreen/Dialog ****/\n\n    public WidgetOnScreen (WidgetName:string, Screen:Indexable):Indexable|undefined {\n      const WidgetList = Screen.WidgetList || []\n      for (let i = 0, l = WidgetList.length; i < l; i++) {\n        if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n      }\n      return undefined\n    }\n\n    public WidgetOnDialog (WidgetName:string, Dialog:Indexable):Indexable|undefined {\n      return this.WidgetOnScreen(WidgetName,Dialog)            // keeps code DRY\n    }\n\n  /**** existingWidgetOnScreen/Dialog ****/\n\n    public existingWidgetOnScreen (WidgetName:string, Screen:Indexable):Indexable {\n      const Widget = this.WidgetOnScreen(WidgetName,Screen)\n      if (Widget == null) throwError(\n        'NoSuchWidget: screen ' + quoted(Screen.Name) + ' does not contain ' +\n        'a widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n    public existingWidgetOnDialog (WidgetName:string, Dialog:Indexable):Indexable {\n      const Widget = this.WidgetOnDialog(WidgetName,Dialog)\n      if (Widget == null) throwError(\n        'NoSuchWidget: dialog ' + quoted(Dialog.Name) + ' does not contain ' +\n        'a widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n  /**** WidgetInContainer ****/\n\n    public WidgetInContainer (WidgetName:string, Container:Indexable):Indexable|undefined {\n      const WidgetList = Container.WidgetList || []\n      for (let i = 0, l = WidgetList.length; i < l; i++) {\n        if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n      }\n      return undefined\n    }\n\n  /**** existingWidgetInContainer ****/\n\n    public existingWidgetInContainer (WidgetName:string, Container:Indexable):Indexable {\n      const Widget = this.WidgetInContainer(WidgetName,Container)\n      if (Widget == null) throwError(\n        'NoSuchWidget: could not find widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n  /**** stuffing ****/\n\n    public stuff (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.stuffScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.stuffDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** stuffScreen ****/\n\n    public stuffScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let WidgetName in PropSet) {\n        let Widget = this.existingWidgetOnScreen(WidgetName,Screen)\n        this.stuffWidget(Widget,PropSet[WidgetName])\n      }\n    }\n\n  /**** stuffDialog ****/\n\n    public stuffDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let WidgetName in PropSet) {\n        let Widget = this.existingWidgetOnDialog(WidgetName,Dialog)\n        this.stuffWidget(Widget,PropSet[WidgetName])\n      }\n    }\n\n  /**** stuffWidget ****/\n\n    public stuffWidget (Widget:Indexable, PropSet:Indexable):void {\n      if (this.ValueIsStuff(PropSet)) {\n        const fromScreen = this.existingScreenNamed(PropSet.from)\n        Widget.WidgetList = (Widget.WidgetList || []).concat(PropSet.with.map(\n          (WidgetName:string) => this.existingWidgetOnScreen(WidgetName,fromScreen)\n        ))\n      } else {\n        for (let Property in PropSet) {\n          const innerWidget = this.existingWidgetInContainer(Property,Widget)\n          this.stuffWidget(innerWidget,PropSet[Property])\n        }\n      }\n    }\n\n  /**** ValueIsStuff ****/\n\n    public ValueIsStuff (Candidate:any):boolean {\n      return (\n        ValueIsPlainObject(Candidate) &&\n        ValueIsString(Candidate.from) &&\n        ValueIsListSatisfying(Candidate.with,ValueIsString)\n      )\n    }\n\n  /**** configure (w/o rerendering) ****/\n\n    public configure (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.configureScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.configureDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** configureScreen (w/o rerendering) ****/\n\n    public configureScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.configureWidget(Screen,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnScreen(Name,Screen)\n          this.configureWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** configureDialog (w/o rerendering) ****/\n\n    public configureDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.configureWidget(Dialog,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnDialog(Name,Dialog)\n          this.configureWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** configureWidget (w/o rerendering) ****/\n\n    public configureWidget (Widget:Indexable, PropSet:Indexable):void {\n      for (let Property in PropSet) {\n        let Value = PropSet[Property]\n        if (ValueIsPlainObject(Value) && ValueIsFunction(Value.Updater)) {\n          this._UpdaterList.push(computed(() => {\n            this.updateWidget(Widget, { [Property]:Value.Updater() })\n          }))\n        } else {\n          if (ValueIsPlainObject(Value) && (Widget.WidgetList != null)) {\n            const innerWidget = this.WidgetInContainer(Property,Widget)\n            if (innerWidget != null) {\n              this.configureWidget(innerWidget,Value)\n              continue\n            }\n          }\n\n          Widget[Property] = Value\n        }\n      }\n    }\n\n  /**** update (w/ rerendering) ****/\n\n    public update (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.updateScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.updateDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** updateScreen (w/o rerendering) ****/\n\n    public updateScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.updateWidget(Screen,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnScreen(Name,Screen)\n          this.updateWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** updateDialog (w/o rerendering) ****/\n\n    public updateDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.updateWidget(Dialog,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnDialog(Name,Dialog)\n          this.updateWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** updateWidget (w/ rerendering) ****/\n\n    public updateWidget (Widget:Indexable,PropSet:Indexable):void {\n      for (let Property in PropSet) {\n        Widget[Property] = PropSet[Property]\n      }\n\n      const View = Widget.View\n      if (View != null) { View.rerender() }\n    }\n\n  /**** updatedFrom ****/\n\n    public updatedFrom (Updater:Function):Indexable {\n      return { Updater }\n    }\n\n  /**** View ****/\n\n    public get View ():PUX_View|undefined  { return this._View }\n    public set View (_:PUX_View|undefined) { throwReadOnlyError('View') }\n\n  /**** renderInto ****/\n\n    public renderInto (Container:HTMLElement):void {\n      render(html`<${PUX_View} ProtoUX=${this}/>`,Container)\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      if (this._View != null) { this._View.rerender() }\n    }\n\n  /**** registerWidgetView ****/\n\n    public static registerWidgetView (Name:string, Class:Function):void {\n      ProtoUX._WidgetViewRegistry[Name] = Class\n    }\n\n  /**** WidgetViewForType ****/\n\n    public static WidgetViewForType (Name:string):Function|undefined {\n      return ProtoUX._WidgetViewRegistry[Name]\n    }\n\n\n  }\n\n//------------------------------------------------------------------------------\n//--                                 PUX_View                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_View extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      let ProtoUX = PropSet.ProtoUX\n      ProtoUX['_View'] = this                          // this is a hack, I know\n\n      const openScreen = ProtoUX._openScreen\n\n      const openDialogs      = ProtoUX._openDialogs.slice()\n      const frontmostDialog  = openDialogs.pop()\n      const frontmostIsModal = (frontmostDialog?.isModal == true)\n\n      return html`<div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; right:0px; bottom:0px;\n      \">\n        <${PUX_ScreenView} ProtoUX=${ProtoUX} Screen=${openScreen}/>\n        ${openDialogs.map((Dialog:Indexable) => {\n          return html`<${PUX_DialogView} ProtoUX=${ProtoUX} Dialog=${Dialog} key=${Dialog.Name}/>`\n        })}\n        ${frontmostIsModal ? html`<${PUX_ModalLayer}/>` : ''}\n        ${frontmostDialog == null\n          ? ''\n          : html`<${PUX_DialogView} ProtoUX=${ProtoUX} Dialog=${frontmostDialog} key=${frontmostDialog.Name}/>`\n        }\n      </div>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_ScreenView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_ScreenView extends Component {\n    public render (PropSet:Indexable):any {\n      const Screen = PropSet.Screen\n      Screen['View'] = this                            // this is a hack, I know\n\n      const { Id, Classes,Style, Width,Height, WidgetList } = Screen\n\n      return html`<div class=${ClassesWith('PUX Screen',Classes)} id=${Id} style=\"\n        width:${Width}px; height:${Height}px; ${Style || ''}\n      \">\n        ${WidgetList.map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n        )}\n      </div>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                             PUX_ModalLayer                             --\n//------------------------------------------------------------------------------\n\n  class PUX_ModalLayer extends Component {\n    public render (PropSet:Indexable):any {\n      const { Style } = PropSet\n\n      function onClick (Event:MouseEvent):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n      }\n\n      return html`<div class=\"PUX ModalLayer\" style=\"\n        ${Style || ''};\n        display:block; position:absolute;\n        left:0px; top:0px; right:0px; bottom:0px;\n      \" onClick=${onClick}/>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_DialogView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_DialogView extends Component {\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      if (Dialog.Type === 'ResizableDialog') {\n        return html`<${PUX_ResizableDialogView} Dialog=${Dialog} ProtoUX=${PropSet.ProtoUX}/>`\n      } else {\n        return html`<${PUX_StandardDialogView}  Dialog=${Dialog} ProtoUX=${PropSet.ProtoUX}/>`\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          PUX_StandardDialogView                          --\n//------------------------------------------------------------------------------\n\n  class PUX_StandardDialogView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      Dialog.View = this\n\n      const moveDialog = (x:number,y:number, dx:number,dy:number) => {\n        Dialog.x = Dialog._DragOffset.x + dx\n        Dialog.y = Dialog._DragOffset.y + dy\n        Dialog.z = 20001000             // brings dialog to front while dragging\n        PropSet.ProtoUX.View.rerender()\n//      this.rerender() // does not seem to work for any reason\n      }\n\n      const moveDialogAndFinish = (x:number,y:number, dx:number,dy:number) => {\n        moveDialog(x,y, dx,dy)\n        Dialog.z = 2000000\n        PropSet.ProtoUX.bringDialogToFront(Dialog.Name)\n      }\n\n      const DragRecognizer = DragRecognizerFor(Dialog, {\n        neverFrom:      '.CloseButton',\n        Threshold:      4,\n        onDragStarted:  (x:number,y:number, dx:number,dy:number) => {\n          Dialog._DragOffset = { x:Dialog.x, y:Dialog.y }\n          moveDialog(x,y, dx,dy)\n        },\n        onDragContinued: moveDialog,\n        onDragFinished:  moveDialogAndFinish,\n        onDragCancelled: moveDialogAndFinish,\n      })\n\n      const {\n        Id, Classes,Style, x,y,z, Width,Height, Title, closeable,\n        View, WidgetList, ...otherProps\n      } = Dialog\n\n      const CSSGeometry = (\n        `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n      )\n\n      function onClose (Event:MouseEvent) {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (closeable !== false) { PropSet.ProtoUX.closeDialog(Dialog.Name) }\n      }\n\n      return html`<div class=${ClassesWith('PUX Dialog',Classes)} id=${Id} style=\"\n        ${Style || ''}; ${CSSGeometry}; z-index:${z || 2000000};\n      \" ...${otherProps}>\n        <div class=\"Titlebar\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        >\n          <div class=\"Title\">${Title}</div>\n          <img class=\"CloseButton\" src=\"${PropSet.ProtoUX._ImageFolder}/xmark.png\"\n            style=\"visibility:${closeable === false ? 'hidden' : 'visible'}\"\n            onClick=${onClose}/>\n        </div>\n\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n        )}\n      </>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                         PUX_ResizableDialogView                          --\n//------------------------------------------------------------------------------\n\n  class PUX_ResizableDialogView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      Dialog.View = this\n\n      let {\n        Id, Classes,Style, x,y,z, Width,Height, Title, closeable,\n        minWidth, minHeight, maxWidth, maxHeight,\n        View, WidgetList, ...otherProps\n      } = Dialog\n\n      allowOrdinal('minimal width', minWidth)\n      allowOrdinal('maximal width', maxWidth)\n      allowOrdinal('minimal height',minHeight)\n      allowOrdinal('maximal height',maxHeight)\n\n      if (minWidth  == null) { minWidth  = 120 }\n      if (maxWidth  == null) { maxWidth  = Infinity }\n      if (minHeight == null) { minHeight = 80 }\n      if (maxHeight == null) { maxHeight = Infinity }\n\n      minWidth  = Math.max(0,minWidth)\n      maxWidth  = Math.max(minWidth,maxWidth)\n      minHeight = Math.max(0,minHeight)\n      maxHeight = Math.max(minHeight,maxHeight)\n\n      const handleDrag = (x:number,y:number, dx:number,dy:number) => {\n        if (Dialog._DragMode === 'drag') {\n          moveDialog(dx,dy)\n        } else {\n          resizeDialog(dx,dy)\n        }\n        Dialog.z = 20001000             // brings dialog to front while dragging\n        PropSet.ProtoUX.View.rerender()\n//      this.rerender() // does not seem to work for any reason\n      }\n\n      const handleDragAndFinish = (x:number,y:number, dx:number,dy:number) => {\n        handleDrag(x,y, dx,dy)\n        Dialog.z = 2000000\n        PropSet.ProtoUX.bringDialogToFront(Dialog.Name)\n      }\n\n      const moveDialog = (dx:number,dy:number) => {\n        Dialog.x = Dialog._DragOffset.x + dx\n        Dialog.y = Dialog._DragOffset.y + dy\n      }\n\n      const resizeDialog = (dx:number,dy:number) => {\n        switch (Dialog._DragMode) {\n          case 'resize-sw':\n            let newWidth =  Math.max(minWidth,Math.min(Dialog._DragOffset.Width - dx,maxWidth))\n              dx = newWidth - Dialog._DragOffset.Width\n            Dialog.x     = Dialog._DragOffset.x     - dx\n            Dialog.Width = Dialog._DragOffset.Width + dx\n            break\n          case 'resize-se':\n            Dialog.Width = Math.max(minWidth,Math.min(Dialog._DragOffset.Width + dx,maxWidth))\n        }\n        Dialog.Height = Math.max(minHeight,Math.min(Dialog._DragOffset.Height + dy,maxHeight))\n      }\n\n      const DragRecognizer = DragRecognizerFor(Dialog, {\n        onlyFrom:       '.Titlebar,.leftResizer,.middleResizer,.rightResizer',\n        neverFrom:      '.CloseButton',\n        Threshold:      4,\n        onDragStarted:  (x:number,y:number, dx:number,dy:number, Event:PointerEvent) => {\n          let ClassList = (Event.target as HTMLElement).classList; Dialog._DragMode = undefined\n          switch (true) {\n            case ClassList.contains('leftResizer'):   Dialog._DragMode = 'resize-sw'; break\n            case ClassList.contains('middleResizer'): Dialog._DragMode = 'resize-s';  break\n            case ClassList.contains('rightResizer'):  Dialog._DragMode = 'resize-se'; break\n            default:                                  Dialog._DragMode = 'drag'\n          }\n          Dialog._DragOffset = {\n            x:Dialog.x, Width:Dialog.Width,\n            y:Dialog.y, Height:Dialog.Height\n          }\n          handleDrag(x,y, dx,dy)\n        },\n        onDragContinued: handleDrag,\n        onDragFinished:  handleDragAndFinish,\n        onDragCancelled: handleDragAndFinish,\n      })\n\n      function onClose (Event:MouseEvent) {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (closeable !== false) { PropSet.ProtoUX.closeDialog(Dialog.Name) }\n      }\n\n      const CSSGeometry = (\n        `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n      )\n\n      return html`<div class=${ClassesWith('PUX ResizableDialog',Classes)} id=${Id} style=\"\n        ${Style || ''}; ${CSSGeometry}; z-index:${z || 2000000};\n      \" ...${otherProps}>\n        <div class=\"ContentPane\">\n          ${(WidgetList || []).map(\n            (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n          )}\n        </div>\n\n        <div class=\"Titlebar\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        >\n          <div class=\"Title\">${Title}</div>\n          <img class=\"CloseButton\" src=\"${PropSet.ProtoUX._ImageFolder}/xmark.png\"\n            style=\"visibility:${closeable === false ? 'hidden' : 'visible'}\"\n            onClick=${onClose}/>\n        </div>\n\n        <div class=\"leftResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n        <div class=\"middleResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n        <div class=\"rightResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n      </>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_WidgetView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_WidgetView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      if ((PropSet.hidden == true) || (Widget.hidden == true)) {\n        return ''\n      }\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, hidden,View,\n        WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      switch (Widget.Type) {\n        case 'Group':                                  // an invisible container\n          return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"${CSSGeometry} ${Style || ''}\" ...${otherProps}>\n            ${(WidgetList || []).map(\n              (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n            )}\n          </div>`\n//      case 'Container':                            // a box with inner widgets\n        case 'Box':                                 // without any inner widgets\n          return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"\n            ${CSSGeometry} ${Style || ''}\n          \" ...${otherProps} key=${Widget.Name}/>`\n        default:                         // default rendering like a \"container\"\n          const WidgetView = ProtoUX.WidgetViewForType(Widget.Type)\n          if (WidgetView == null) {\n            const {\n              Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, hidden,View,\n              WidgetList, ...otherProps\n            } = Widget\n\n            return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"\n              ${CSSGeometry} ${Style || ''}\n            \" ...${otherProps}>\n              ${Value || ''}\n              ${(WidgetList || []).map(\n                (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n              )}\n            </div>`\n          } else {\n            return html`<${WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n          }\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                         PUX_horizontalSeparator                          --\n//------------------------------------------------------------------------------\n\n  class PUX_horizontalSeparator extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX horizontalSeparator Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('horizontalSeparator',PUX_horizontalSeparator)\n\n//------------------------------------------------------------------------------\n//--                          PUX_verticalSeparator                           --\n//------------------------------------------------------------------------------\n\n  class PUX_verticalSeparator extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX verticalSeparator Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('verticalSeparator',PUX_verticalSeparator)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Badge                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Badge extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      Value = (''+(Value || '')).trim()\n      switch (true) {\n        case (Value === ''):     return ''\n        case (Value.length > 1): Value = '#'\n        default: return html`<div class=${ClassesWith('PUX Badge Widget',Classes)} id=${Id} style=\"\n          ${CSSGeometry} ${Style || ''}\n        \" ...${otherProps}>${Value}</div>`\n      }\n    }\n  }\n  ProtoUX.registerWidgetView('Badge',PUX_Badge)\n\n//------------------------------------------------------------------------------\n//--                               PUX_HTMLView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_HTMLView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX HTMLView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}\n        dangerouslySetInnerHTML=${{__html:Value}}\n      />`\n    }\n  }\n  ProtoUX.registerWidgetView('HTMLView',PUX_HTMLView)\n\n//------------------------------------------------------------------------------\n//--                               PUX_TextView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TextView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX TextView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>${Value}</>`\n    }\n  }\n  ProtoUX.registerWidgetView('TextView',PUX_TextView)\n\n//------------------------------------------------------------------------------\n//--                              PUX_ImageView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_ImageView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        ImageScaling, ImageAlignment, WidgetList, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<img class=${ClassesWith('PUX ImageView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''};\n        object-fit:${ImageScaling === 'stretch' ? 'fill ' : ImageScaling};\n        object-position:${ImageAlignment};\n      \" ...${otherProps} src=${Value}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('ImageView',PUX_ImageView)\n\n//------------------------------------------------------------------------------\n//--                               PUX_WebView                                --\n//------------------------------------------------------------------------------\n\n  class PUX_WebView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        PermissionsPolicy, allowsFullscreen, SandboxPermissions,\n        ReferrerPolicy, WidgetList, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const DefaultSandboxPermissions = (\n        'allow-downloads allow-forms allow-modals allow-orientation-lock ' +\n        'allow-pointer-lock allow-popups allow-same-origin allow-scripts'\n      )\n\n      return html`<iframe class=${ClassesWith('PUX WebView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps} src=${Value}\n        allow=${PermissionsPolicy} allowfullscreen=${allowsFullscreen}\n        sandbox=${SandboxPermissions || DefaultSandboxPermissions}\n        referrerpolicy=${ReferrerPolicy}\n      />`\n    }\n  }\n  ProtoUX.registerWidgetView('WebView',PUX_WebView)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Icon                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Icon extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Color,\n        disabled,onClick, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let PUX = PropSet.ProtoUX, ImageFolder = PUX.ImageFolder\n      if ((Value != null) && (Value.trim() !== '')) {\n        Value = Value.trim().replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      function _onClick (Event:PointerEvent) {\n        if (disabled == true) {\n          Event.stopPropagation()\n          Event.preventDefault()\n        } else {\n          if (typeof onClick === 'function') { onClick(Event) }\n        }\n      }\n\n      return html`<div class=${ClassesWith('PUX Icon Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" disabled=${disabled}><div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; width:100%; height:100%;\n        -webkit-mask-image:${Value};         mask-image:${Value};\n        -webkit-mask-size:contain;           mask-size:contain;\n        -webkit-mask-position:center center; mask-position:center center;\n        background-color:${Color || 'black'};\n      \" onClick=${_onClick} ...${otherProps}/></>`\n    }\n  }\n  ProtoUX.registerWidgetView('Icon',PUX_Icon)\n\n//------------------------------------------------------------------------------\n//--                            PUX_PseudoDropDown                            --\n//------------------------------------------------------------------------------\n\n  class PUX_PseudoDropDown extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        Value,Color,Options, disabled,onInput, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let PUX = PropSet.ProtoUX, ImageFolder = PUX.ImageFolder\n      if ((Value != null) && (Value.trim() !== '')) {\n        Value = Value.trim().replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      function _onInput (Event:any) {\n        if (disabled == true) {\n          Event.stopPropagation()\n          Event.preventDefault()\n        } else {\n          if (typeof onInput === 'function') { onInput(Event) }\n        }\n      }\n\n      return html`<div class=${ClassesWith('PUX PseudoDropDown Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \"><div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; width:100%; height:100%;\n        -webkit-mask-image:${Value};         mask-image:${Value};\n        -webkit-mask-size:contain;           mask-size:contain;\n        -webkit-mask-position:center center; mask-position:center center;\n        background-color:${Color || 'black'};\n      \" ...${otherProps}/>\n        <select onInput=${_onInput}>\n          ${ValueIsListSatisfying(Options,ValueIsString)\n            ? html`\n                <option value=\"\" disabled selected>please select</option>\n                ${(Options || []).map(\n                  (Option:string) => html`<option>${Option}</>`\n                )}\n              `\n            : Options\n          }\n        </select>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('PseudoDropDown',PUX_PseudoDropDown)\n\n//------------------------------------------------------------------------------\n//--                              PUX_Button                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Button extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Button Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <button ...${otherProps}>${Value || ''}</button>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Button',PUX_Button)\n\n//------------------------------------------------------------------------------\n//--                               PUX_Checkbox                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Checkbox extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let { checked,indeterminate } = PropSet\n      if (checked       == null) { checked       = (Value == true)}\n      if (indeterminate == null) { indeterminate = (Value == null) }\n\n      return html`<div class=${ClassesWith('PUX Checkbox Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"checkbox\" checked=${checked} indeterminate=${indeterminate} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Checkbox',PUX_Checkbox)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Radiobutton                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Radiobutton extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let { checked } = PropSet\n      if (checked == null) { checked = (Value == true)}\n\n      return html`<div class=${ClassesWith('PUX Radiobutton Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"radio\" checked=${checked} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Radiobutton',PUX_Radiobutton)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Gauge                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Gauge extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Gauge Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <meter value=${Value || ''} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Gauge',PUX_Gauge)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Progressbar                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Progressbar extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Progressbar Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <progress value=${Value || ''} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Progressbar',PUX_Progressbar)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Slider                                --\n//------------------------------------------------------------------------------\n\n  const HashmarkPattern = /^\\s*(\\d+(?:[.]\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  class PUX_Slider extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Hashmarks,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let HashmarkList:any = '', HashmarkId\n      if (Array.isArray(Hashmarks) && (Hashmarks.length > 0)) {\n        HashmarkId = Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string) => {\n            const Label = Item.replace(/:.*$/,'').trim()\n            const Value = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option label=${Label} value=${Value}></option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX Slider Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"range\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)} list=${HashmarkId}\n        />\n      </div>${HashmarkList}`\n    }\n  }\n  ProtoUX.registerWidgetView('Slider',PUX_Slider)\n\n//------------------------------------------------------------------------------\n//--                            PUX_TextlineInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_TextlineInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX TextlineInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"text\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('TextlineInput',PUX_TextlineInput)\n\n//------------------------------------------------------------------------------\n//--                            PUX_PasswordInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_PasswordInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX PasswordInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"password\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('PasswordInput',PUX_PasswordInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_NumberInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_NumberInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX NumberInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"number\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('NumberInput',PUX_NumberInput)\n\n//------------------------------------------------------------------------------\n//--                           PUX_PhoneNumberInput                           --\n//------------------------------------------------------------------------------\n\n  class PUX_PhoneNumberInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX PhoneNumberInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"tel\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('PhoneNumberInput',PUX_PhoneNumberInput)\n\n//------------------------------------------------------------------------------\n//--                          PUX_EMailAddressInput                           --\n//------------------------------------------------------------------------------\n\n  class PUX_EMailAddressInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX EMailAddressInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"email\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('EMailAddressInput',PUX_EMailAddressInput)\n\n//------------------------------------------------------------------------------\n//--                               PUX_URLInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_URLInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX URLInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"url\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('URLInput',PUX_URLInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TimeInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TimeInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX TimeInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"time\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('TimeInput',PUX_TimeInput)\n\n//------------------------------------------------------------------------------\n//--                            PUX_DateTimeInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_DateTimeInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX DateTimeInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"datetime-local\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('DateTimeInput',PUX_DateTimeInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_DateInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_DateInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX DateInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"date\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('DateInput',PUX_DateInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_WeekInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_WeekInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX WeekInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"week\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('WeekInput',PUX_WeekInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_MonthInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_MonthInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX MonthInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"month\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('MonthInput',PUX_MonthInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_SearchInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_SearchInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX SearchInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"search\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('SearchInput',PUX_SearchInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_FileInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_FileInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View,\n        Placeholder, onDrop, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function onDragEnter (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onDragOver (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onFileDrop (Event:Event):void {// leaves \"onDrop\" free as a Prop.\n        Event.stopPropagation()\n        Event.preventDefault()\n\n        if (typeof onDrop === 'function') { onDrop(Event) }\n      }               // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n      return html`<label class=${ClassesWith('PUX FileInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onFileDrop}>\n        <input type=\"file\" style=\"display:none\" ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n        ${(Value || '') === '' ? '' : html`<span>${Value}</span>`}\n        ${(Value || '') === '' ? ((Placeholder || '') === '' ? '' : html`<span>${Placeholder}</span>`) : ''}\n      </label>`\n    }\n  }\n  ProtoUX.registerWidgetView('FileInput',PUX_FileInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_ColorInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_ColorInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX ColorInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"color\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('ColorInput',PUX_ColorInput)\n\n//------------------------------------------------------------------------------\n//--                               PUX_DropDown                               --\n//------------------------------------------------------------------------------\n\n  class PUX_DropDown extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Options, Placeholder,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX DropDown Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <select ...${otherProps} onBlur=${this.rerender.bind(this)}>\n          ${Placeholder == null\n            ? ''\n            : html`<option value=\"\" disabled>${Placeholder}</option>`\n          }\n          ${(Options || []).map(\n            (Option:string) => html`<option selected=${Option === Value}>${Option}</>`\n          )}\n        </select>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('DropDown',PUX_DropDown)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TextInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TextInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX TextInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <textarea ...${otherProps} value=${Value || ''}\n          onBlur=${this.rerender.bind(this)}\n        ></textarea>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('TextInput',PUX_TextInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_FileDropArea                             --\n//------------------------------------------------------------------------------\n\n  class PUX_FileDropArea extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, onDrop,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function onDragEnter (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onDragOver (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onFileDrop (Event:Event):void {// leaves \"onDrop\" free as a Prop.\n        Event.stopPropagation()\n        Event.preventDefault()\n\n        if (typeof onDrop === 'function') { onDrop(Event) }\n      }               // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n      return html`<label class=${ClassesWith('PUX FileDropArea Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onFileDrop}>\n        <input type=\"file\" ...${otherProps}/>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </label>`\n    }\n  }\n  ProtoUX.registerWidgetView('FileDropArea',PUX_FileDropArea)\n\n//------------------------------------------------------------------------------\n//--                              PUX_Accordion                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Accordion extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Accordion Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_Fold} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Accordion',PUX_Accordion)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Fold                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Fold extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Expansion,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const self = this\n      function onClick () {\n        Widget.Expansion = ! Widget.Expansion\n        self.rerender()\n      }\n\n      return html`<div class=${ClassesWith('PUX Fold Widget',Classes)} id=${Id} style=\"\n        ${Style || ''}; left:0px; top:0px; width:100%; height:auto;\n      \" ...${otherProps}>\n        <div class=\"PUX Fold-Header\">\n          <img class=\"PUX Fold-Expander\" src=${Expansion\n            ? `${PropSet.ProtoUX._ImageFolder}caret-down.png`\n            : `${PropSet.ProtoUX._ImageFolder}caret-right.png`\n          } onClick=${onClick}\n          />\n          <div class=\"PUX Fold-Title\">${Value}</>\n        </div>\n\n        ${Expansion\n          ? html`<div class=\"PUX Fold-Content\" style=\"\n              height:${Height}px; border:none;\n            \">\n              ${(WidgetList || []).map(\n                (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n              )}\n            </>`\n          : ''\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Fold',PUX_Fold)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Deck                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Deck extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const activeIndex = (\n        Value == null ? 0 : (Value < 0 ? WidgetList.length+Value : Value)\n      )\n      const activeCard = (WidgetList || [])[activeIndex] || (WidgetList || [])[0]\n\n      return html`<div class=${ClassesWith('PUX Deck Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${activeCard == null\n          ? html`<${PUX_centered}><span>(no card)</span></>`\n          : html`<${PUX_Card} Widget=${activeCard} ProtoUX=${PropSet.ProtoUX}/>`\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Deck',PUX_Deck)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Card                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Card extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      return html`<div class=${ClassesWith('PUX Card Widget',Classes)} id=${Id} style=\"\n        border:none; ${Style || ''};\n        left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto\n      \" ...${otherProps}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Card',PUX_Card)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TabStrip                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TabStrip extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const activeIndex = (\n        Value == null ? 0 : (Value < 0 ? WidgetList.length+Value : Value)\n      )\n      const activeTab = (WidgetList || [])[activeIndex] || (WidgetList || [])[0]\n\n      const self = this as Component\n      function activateTab (Index:number):void {\n        (self.base as HTMLElement).dispatchEvent(new CustomEvent('ValueChange',{ detail:Index }))\n      }\n\n      return html`<div class=${ClassesWith('PUX TabStrip Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${(WidgetList || []).map((Widget:Indexable, Index:number) => html`\n          <${PUX_Tab} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}\n            active=${Widget === activeTab}\n            onClick=${() => activateTab(Index)}\n          />\n        `\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('TabStrip',PUX_TabStrip)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Tab                                  --\n//------------------------------------------------------------------------------\n\n  class PUX_Tab extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const { active,onClick } = PropSet\n\n      return html`<div class=${ClassesWith('PUX ${active ? \"active\" : \"\"} Tab Widget',Classes)} id=${Id} style=\"\n        ${Style || ''}; width:${Width}px; border:none; border-width:0px 0px 4px 0px;\n        border-style:solid; border-bottom-color:${active ? 'black' : 'transparent'}\n      \" ...${otherProps} onClick=${onClick}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Tab',PUX_Tab)\n\n//------------------------------------------------------------------------------\n//--                             PUX_FlatListView                             --\n//------------------------------------------------------------------------------\n\n  class PUX_FlatListView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        List, ItemRenderer, Placeholder, selectedIndices, SelectionLimit,\n        onSelectionChange, onItemSelected, onItemDeselected,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      expectArray                       ('item list',List)\n      allowFunction            ('list item renderer',ItemRenderer)\n      allowTextline              ('list placeholder',Placeholder)\n      allowListSatisfying('list of selected indices',selectedIndices, ValueIsOrdinal)\n      allowOrdinal                ('selection limit',SelectionLimit)\n      allowFunction     ('selection change callback',onSelectionChange)\n      allowFunction       ('item selection callback',onItemSelected)\n      allowFunction     ('item deselection callback',onItemDeselected)\n\n      if (ItemRenderer    == null) { ItemRenderer    = (Item:any) => html`${Item+''}` }\n      if (Placeholder     == null) { Placeholder     = '(empty)' }\n      if (selectedIndices == null) { selectedIndices = [] }\n      if (SelectionLimit  == null) { SelectionLimit  = 1 }\n\n      const selectedIndexSet:Indexable = Object.create(null)\n        selectedIndices = selectedIndices.filter((selectedIndex:number) => {\n          if (\n            ValueIsOrdinal(selectedIndex) &&\n            (selectedIndex >= 0) && (selectedIndex < List.length) &&\n            ! (selectedIndex in selectedIndexSet)\n          ) {\n            selectedIndexSet[selectedIndex] = true\n            return true\n          } else {\n            return false\n          }\n        })\n      if (selectedIndices.length > SelectionLimit) {\n        const deselectedIndices = selectedIndices.slice(SelectionLimit)\n\n        selectedIndices.length = SelectionLimit\n        if (onSelectionChange != null) {\n          onSelectionChange(selectedIndices)\n        }\n\n        if (onItemDeselected != null) {\n          deselectedIndices.forEach((deselectedIndex:number) => {\n            onItemDeselected(List[deselectedIndex],deselectedIndex)\n          })\n        }\n      }\n\n      function onClick (Event:MouseEvent, Index:number):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (SelectionLimit === 0) { return }\n\n        let SelectionChanged:boolean = false\n        let IndicesToSelect:number[], IndicesToDeselect:number[]\n        if (Event.shiftKey || Event.metaKey) {\n          SelectionChanged = true\n          if (ItemIsSelected(Index)) {\n            IndicesToDeselect = [Index]\n            selectedIndices   = selectedIndices.filter(\n              (selectedIndex:number) => (selectedIndex !== Index)\n            )\n          } else {\n            if (selectedIndices.length === SelectionLimit) {\n              IndicesToDeselect = [selectedIndices.shift()]\n            }\n            IndicesToSelect = [Index]\n            selectedIndices.push(Index)\n          }\n        } else {\n          IndicesToDeselect = selectedIndices.filter(\n            (selectedIndex:number) => (selectedIndex !== Index)\n          )\n          SelectionChanged = ! ItemIsSelected(Index)\n          IndicesToSelect  = (SelectionChanged ? [Index] : [])\n          selectedIndices  = [Index]\n        }\n\n        if (SelectionChanged && (onSelectionChange != null)) {\n          onSelectionChange(selectedIndices)\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((IndicesToDeselect != null) && (onItemDeselected != null)) {\n          IndicesToDeselect.forEach((deselectedIndex:number) => {\n            onItemDeselected(List[deselectedIndex],deselectedIndex)\n          })\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((IndicesToSelect != null) && (onItemSelected != null)) {\n          IndicesToSelect.forEach((selectedIndex:number) => {\n            onItemSelected(List[selectedIndex],selectedIndex)\n          })\n        }\n      }\n\n      function ItemIsSelected (Index:number):boolean {\n        return (Index in selectedIndexSet)\n      }\n\n      return html`<div class=${ClassesWith('PUX FlatListView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${\n          List.length === 0\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : List.map((Item:any, Index:number) => html`<div\n              class=${ItemIsSelected(Index) ? 'selected' : undefined}\n              dangerouslySetInnerHTML=${{\n                __html:ItemRenderer(Item, Index, ItemIsSelected(Index))\n              }}\n              onClick=${(Event:MouseEvent) => onClick(Event,Index)}\n            />`)\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('FlatListView',PUX_FlatListView)\n\n//------------------------------------------------------------------------------\n//--                             PUX_NestedListView                             --\n//------------------------------------------------------------------------------\n\n  class PUX_NestedListView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        List, ItemRenderer, Placeholder, LabelOfItem, ContentListOfItem,\n        selectedPaths, SelectionLimit, SelectionMode,\n        onSelectionChange, onItemSelected, onItemDeselected,\n        onItemDoubleClicked,\n        expandedPaths, Indentation,\n        onExpansionChange, onItemExpanded, onItemCollapsed,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function ValueIsOrdinalList (Value:any):boolean {\n        return ValueIsListSatisfying(Value,ValueIsOrdinal)\n      }\n\n      expectArray                     ('item list',List)\n      allowFunction          ('list item renderer',ItemRenderer)\n      allowTextline            ('list placeholder',Placeholder)\n      expectFunction  ('label extraction function',LabelOfItem)\n      expectFunction('content extraction function',ContentListOfItem)\n      allowListSatisfying('list of selected paths',selectedPaths, ValueIsOrdinalList)\n      allowOrdinal              ('selection limit',SelectionLimit)\n      allowOneOf                 ('selection mode',SelectionMode, ['same-container','any-container'])\n      allowFunction   ('selection change callback',onSelectionChange)\n      allowFunction     ('item selection callback',onItemSelected)\n      allowFunction   ('item deselection callback',onItemDeselected)\n      allowFunction  ('item double-click callback',onItemDoubleClicked)\n      allowListSatisfying('list of expanded paths',expandedPaths, ValueIsOrdinalList)\n      allowOrdinal                  ('indentation',Indentation)\n      allowFunction   ('expansion change callback',onExpansionChange)\n      allowFunction     ('item expansion callback',onItemExpanded)\n      allowFunction      ('item collapse callback',onItemCollapsed)\n\n      function DefaultRenderer (Item:any, Path:number[]):any {\n        return html`<div class=\"ItemLabel\">${LabelOfItem(Item)}</div>`\n      }\n\n      if (ItemRenderer   == null) { ItemRenderer   = DefaultRenderer }\n      if (Placeholder    == null) { Placeholder    = '(empty)' }\n      if (selectedPaths  == null) { selectedPaths  = [] }\n      if (SelectionLimit == null) { SelectionLimit = 1 }\n      if (SelectionMode  == null) { SelectionMode  = 'same-container' }\n      if (expandedPaths  == null) { expandedPaths  = [] }\n      if (Indentation    == null) { Indentation    = 10 }\n\n      function ItemAtPath (Path:number[]):any {\n        let Item:any = List[Path[0]]\n          for (let i = 1, l = Path.length; i < l; i++) {\n            if (Item == null) { return undefined }\n\n            const ContentList = ContentListOfItem(Item)\n            if (! ValueIsArray(ContentList)) { return undefined }\n\n            Item = ContentList[Path[i]]\n          }\n        return Item\n      }\n\n      function ItemAtPathExists (Path:number[]):boolean {\n        return (ItemAtPath(Path) != null)\n      }\n\n      function PathsAreEqual (PathA:number[],PathB:number[]):boolean {\n        return (\n          (PathA.length === PathB.length) &&\n          PathA.every((Item,Index) => Item === PathB[Index])\n        )\n      }\n\n      function IndexOfPathIn (Path:number[],PathList:number[][]):number {\n        for (let i = 0, l = PathList.length; i < l; i++) {\n          if (PathsAreEqual(Path,PathList[i])) { return i }\n        }\n        return -1\n      }\n\n      function ItemInContainer (ItemPath:number[],ContainerPath:number[]):boolean {\n        return (\n          (ItemPath.length === ContainerPath.length+1) &&\n          PathsAreEqual(ItemPath.slice(0,ContainerPath.length),ContainerPath)\n        )\n      }\n\n      function ItemNotInContainer (ItemPath:number[],ContainerPath:number[]):boolean {\n        return (\n          (ItemPath.length !== ContainerPath.length+1) ||\n          ! PathsAreEqual(ItemPath.slice(0,ContainerPath.length),ContainerPath)\n        )\n      }\n\n      function ItemIsSelected (Path:number[]):boolean { return (IndexOfPathIn(Path,selectedPaths) >= 0) }\n      function ItemIsExpanded (Path:number[]):boolean { return (IndexOfPathIn(Path,expandedPaths) >= 0) }\n\n      selectedPaths = selectedPaths.filter(\n        (Path:number[]) => ItemAtPathExists(Path)\n      )\n\n      selectedPaths = selectedPaths.filter((Path:number[], Index:number) => (\n        IndexOfPathIn(Path,selectedPaths) === Index\n      ))\n\n      if ((selectedPaths.length > 1) && (SelectionMode === 'same-container')) {\n        const ContainerPath = selectedPaths[0].slice(0,selectedPaths[0].length-1)\n        selectedPaths = selectedPaths.filter((Path:number[]) => (\n          ItemInContainer(Path,ContainerPath)\n        ))\n      }\n\n      expandedPaths = expandedPaths.filter(\n        (Path:number[]) => ItemAtPathExists(Path)\n      )\n\n      expandedPaths = expandedPaths.filter((Path:number[], Index:number) => (\n        IndexOfPathIn(Path,expandedPaths) === Index\n      ))\n\n      function processSelectionClick (\n        Event:PointerEvent, Item:any, ItemPath:number[]\n      ):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (SelectionLimit === 0) { return }\n\n        let SelectionChanged:boolean = false\n        let PathsToSelect:number[][], PathsToDeselect:number[][]\n\n        if (Event.shiftKey || Event.metaKey) {\n          SelectionChanged = true\n          if (ItemIsSelected(ItemPath)) {\n            PathsToDeselect = [ItemPath]\n            selectedPaths   = selectedPaths.filter(\n              (Path:number[]) => ! PathsAreEqual(ItemPath,Path)\n            )\n          } else {\n            const ContainerPath = ItemPath.slice(0,ItemPath.length-1)\n            PathsToDeselect = selectedPaths.filter((Path:number[]) => (\n              ! ItemInContainer(Path,ContainerPath)\n            ))\n            selectedPaths = selectedPaths.filter((Path:number[]) => (\n              ItemInContainer(Path,ContainerPath)\n            ))\n\n            if (selectedPaths.length === SelectionLimit) {\n              PathsToDeselect.push([selectedPaths.shift()])\n            }\n            PathsToSelect = [ItemPath]\n            selectedPaths.push(ItemPath)\n          }\n        } else {\n          PathsToDeselect = selectedPaths.filter(\n            (Path:number[]) => ! PathsAreEqual(ItemPath,Path)\n          )\n          SelectionChanged = ! ItemIsSelected(ItemPath)\n          PathsToSelect    = (SelectionChanged ? [ItemPath] : [])\n          selectedPaths    = [ItemPath]\n        }\n\n        if (SelectionChanged && (onSelectionChange != null)) {\n          onSelectionChange(selectedPaths)\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((PathsToDeselect != null) && (onItemDeselected != null)) {\n          PathsToDeselect.forEach((Path:number[]) => {\n            onItemDeselected(ItemAtPath(Path),Path)\n          })\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((PathsToSelect != null) && (onItemSelected != null)) {\n          PathsToSelect.forEach((Path:number[]) => {\n            onItemSelected(ItemAtPath(Path),Path)\n          })\n        }\n      }\n\n      function processDoubleClick (\n        Event:PointerEvent, Item:any, ItemPath:number[]\n      ):void {\n        if (onItemDoubleClicked != null) {\n          Event.stopImmediatePropagation()\n          Event.preventDefault()\n\n          onItemDoubleClicked(Item,ItemPath,Event)\n        }\n      }\n\n      function processExpansionClick (\n        Event:PointerEvent, Item:any, Path:number[]\n      ):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        let ExpansionIndex = IndexOfPathIn(Path,expandedPaths)\n        if (ExpansionIndex < 0) {\n          expandedPaths.push(Path)\n        } else {\n          expandedPaths.splice(ExpansionIndex,1)\n        }\n\n        if (onExpansionChange != null) {\n          onExpansionChange(expandedPaths)\n        }\n\n        if (ExpansionIndex < 0) {\n          if (onItemExpanded  != null) { onItemExpanded(Item,Path) }\n        } else {\n          if (onItemCollapsed != null) { onItemCollapsed(Item,Path) }\n        }\n      }\n\n      function renderedItem (Item:any, Path:number[]):any {\n        const Offset = (Path.length-1) * Indentation\n\n        const isSelected = ItemIsSelected(Path)\n        const isExpanded = ItemIsExpanded(Path)\n\n        let ContentList = ContentListOfItem(Item)\n        if (! ValueIsArray(ContentList)) { ContentList = [] }\n\n        const hasContent = (ContentList.length > 0)\n\n        function onSelectionClick (Event:PointerEvent) {\n          processSelectionClick(Event, Item,Path)\n        }\n\n        function onDoubleClick (Event:PointerEvent) {\n          processDoubleClick(Event, Item,Path)\n        }\n\n        function onExpansionClick (Event:PointerEvent) {\n          processExpansionClick(Event, Item,Path)\n        }\n\n        return html`<div class=\"ItemView\" style=\"padding-left:${Offset}px\">\n          <div class=\"ItemLine ${isSelected ? 'selected' : ''}\"\n            onClick=${onSelectionClick} onDblClick=${onDoubleClick}\n          >\n            ${hasContent\n              ? (isExpanded\n                  ? html`<img class=\"ItemExpander\" src=\"/svg/icons/caret-down.svg\"  onClick=${onExpansionClick}/>`\n                  : html`<img class=\"ItemExpander\" src=\"/svg/icons/caret-right.svg\" onClick=${onExpansionClick}/>`\n                )\n              : html`<img class=\"ItemIcon\" src=\"/svg/icons/circle.svg\"/>`\n            } ${ItemRenderer(Item,Path)}\n          </div>\n          ${hasContent && isExpanded\n            ? ContentList.map((Item:any, Index:number) => renderedItem(Item,Path.concat(Index)))\n            : ''\n          }\n        </div>`\n      }\n\n\n\n      return html`<div class=${ClassesWith('PUX NestedListView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${\n          List.length === 0\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : List.map((Item:any, Index:number) => renderedItem(Item,[Index]))\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('NestedListView',PUX_NestedListView)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Placeholder                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Placeholder extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, x,y, Width,Height, Substitute,Placeholder,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      allowFunction      ('Substitute',Substitute)\n      allowTextline('placeholder text',Placeholder)\n\n      if (Placeholder == null) { Placeholder = '(empty)' }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Placeholder Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        ${Substitute == null\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : html`<${Substitute} ...${otherProps}/>`\n        }\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Placeholder',PUX_Placeholder)\n\n/**** ClassesWith ****/\n\n  function ClassesWith (Prefix:string, ClassNames:string):string {\n    const ClassSet = Object.create(null)\n\n    const combinedClasses = (\n      Prefix + ' ' + (ClassNames || '')\n    ).trim().replace(/\\s+/g,' ')\n\n    return combinedClasses.split(' ').filter((ClassName:string) => {\n      if (ClassName in ClassSet) {\n        return false\n      } else {\n        ClassSet[ClassName] = true\n        return true\n      }\n    }).join(' ')\n  }//------------------------------------------------------------------------------\n//--                               PUX_centered                               --\n//------------------------------------------------------------------------------\n\n  class PUX_centered extends Component {\n    public render (PropSet:Indexable):any {\n      return html`<div class=\"centered\">\n        ${PropSet.children}\n      </div>`\n    }\n  }\n\n\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","_templateObject28","_templateObject29","_templateObject30","_templateObject31","_templateObject32","_templateObject33","_templateObject34","_templateObject35","_templateObject36","_templateObject37","_templateObject38","_templateObject39","_templateObject40","_templateObject41","_templateObject42","_templateObject43","_templateObject44","_templateObject45","_templateObject46","_templateObject47","_templateObject48","_templateObject49","_templateObject50","_templateObject51","_templateObject52","_templateObject53","_templateObject54","_templateObject55","_templateObject56","_templateObject57","_templateObject58","_templateObject59","_templateObject60","_templateObject61","_templateObject62","_templateObject63","_templateObject64","_templateObject65","_templateObject66","_templateObject67","_templateObject68","_templateObject69","_templateObject70","_templateObject71","_templateObject72","_templateObject73","_templateObject74","_templateObject75","_templateObject76","_templateObject77","_templateObject78","_templateObject79","_templateObject80","_templateObject81","_templateObject82","_templateObject83","_templateObject84","_templateObject85","_templateObject86","_templateObject87","_templateObject88","_templateObject89","_templateObject90","_templateObject91","_templateObject92","_templateObject93","_templateObject94","_templateObject95","_templateObject96","_templateObject97","_templateObject98","_templateObject99","_templateObject100","_templateObject101","_templateObject102","_templateObject103","_templateObject104","_templateObject105","_templateObject106","_templateObject107","_templateObject108","_templateObject109","_templateObject110","_templateObject111","_templateObject112","_templateObject113","_templateObject114","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","_excluded9","_excluded10","_excluded11","_excluded12","_excluded13","_excluded14","_excluded15","_excluded16","_excluded17","_excluded18","_excluded19","_excluded20","_excluded21","_excluded22","_excluded23","_excluded24","_excluded25","_excluded26","_excluded27","_excluded28","_excluded29","_excluded30","_excluded31","_excluded32","_excluded33","_excluded34","_excluded35","_excluded36","_excluded37","_excluded38","_excluded39","_excluded40","_excluded41","_excluded42","_excluded43","_excluded44","_excluded45","observe","hyperactiv","computed","Stylesheet","document","createElement","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","setAttribute","innerHTML","head","appendChild","DragRecognizerForWidget","WeakMap","DragRecognizerFor","Widget","OptionSet","PointerTarget","DragRecognizer","get","DummyCallback","consumeEvent","Event","stopImmediatePropagation","preventDefault","x0","y0","onlyFrom","neverFrom","_OptionSet$Threshold","Threshold","_OptionSet$onDragStar","onDragStarted","_OptionSet$onDragCont","onDragContinued","_OptionSet$onDragFini","onDragFinished","_OptionSet$onDragCanc","onDragCancelled","State","startDragging","x","pageX","y","pageY","Math","round","abortDragging","wasBusy","target","releasePointerCapture","pointerId","undefined","type","isPrimary","HTMLElement","matches","button","setPointerCapture","onPointerDown","console","log","pow","continueDragging","onPointerMove","finishDragging","onPointerUp","onPointerCancel","set","DragClickRecognizerForWidget","DragClickRecognizerFor","DragClickRecognizer","_OptionSet$Threshold2","_OptionSet$onDragStar2","_OptionSet$onDragCont2","_OptionSet$onDragFini2","_OptionSet$onDragCanc2","_OptionSet$onClicked","onClicked","_OptionSet$MultiClick","MultiClickTimeSpan","_OptionSet$onMultiCli","onMultiClick","lastClickTime","lastClickType","now","Date","ProtoUX","IdPrefix","_IdPrefix","this","_ImageFolder","_ScreenSet","_DialogSet","_observed","deep","_UpdaterList","_StartScreen","_openScreen","_openDialogs","_View","_proto","prototype","_createClass","ScreenNamed","ScreenName","existingScreenNamed","Screen","packScreen","padX","padY","packedGeometry","_Screen$packedGeometr","Width","Height","WidgetList","forEach","hidden","openScreen","rerender","closeScreen","ScreenIsOpen","startWithScreen","extractAllDialogs","i","length","Type","ValueIsNonEmptyString","error","splice","DialogNamed","DialogName","existingDialogNamed","Dialog","openDialog","DialogIndex","indexOf","push","onOpen","closeDialog","onClose","DialogIsOpen","closeAllDialogs","DialogIsFrontMost","bringDialogToFront","WidgetNamed","WidgetName","ScreenSet","l","existingWidgetNamed","WidgetOnScreen","WidgetOnDialog","existingWidgetOnScreen","existingWidgetOnDialog","WidgetInContainer","Container","existingWidgetInContainer","stuff","PropSet","stuffDialog","stuffScreen","stuffWidget","_this","ValueIsStuff","fromScreen","from","concat","map","Property","innerWidget","Candidate","ValueIsPlainObject","ValueIsString","ValueIsListSatisfying","configure","configureDialog","configureScreen","configureWidget","self","_this2","_loop","Value","ValueIsFunction","Updater","_this2$updateWidget","updateWidget","update","updateDialog","updateScreen","View","updatedFrom","renderInto","render","html","_taggedTemplateLiteralLoose","PUX_View","registerWidgetView","Class","_WidgetViewRegistry","WidgetViewForType","key","newFolder","trim","endsWith","Element","getElementById","newStyle","StyleId","ImageFolder","replace","newSet","Object","assign","dX","dY","dW","dH","_","slice","create","_Component","_this3","_len","arguments","args","Array","_key","call","apply","state","_inheritsLoose","_proto2","setState","openDialogs","frontmostDialog","pop","frontmostIsModal","isModal","PUX_ScreenView","PUX_DialogView","PUX_ModalLayer","Component","_Component2","Id","Classes","Style","ClassesWith","PUX_WidgetView","_Component3","_Component4","PUX_ResizableDialogView","PUX_StandardDialogView","_Component5","_this4","_len2","_key2","_proto6","moveDialog","dx","dy","_DragOffset","z","moveDialogAndFinish","Title","closeable","otherProps","_objectWithoutPropertiesLoose","CSSGeometry","_Component6","_this5","_len3","_key3","_proto7","minWidth","minHeight","maxWidth","maxHeight","allowOrdinal","Infinity","max","handleDrag","_DragMode","resizeDialog","handleDragAndFinish","newWidth","min","ClassList","classList","contains","_Component7","_this6","_len4","_key4","_proto8","WidgetView","_PUX_WidgetView2","PUX_horizontalSeparator","_PUX_WidgetView3","PUX_verticalSeparator","_PUX_WidgetView4","PUX_Badge","_PUX_WidgetView5","PUX_HTMLView","__html","_PUX_WidgetView6","PUX_TextView","_PUX_WidgetView7","PUX_ImageView","ImageScaling","ImageAlignment","_PUX_WidgetView8","PUX_WebView","PermissionsPolicy","allowsFullscreen","SandboxPermissions","ReferrerPolicy","_PUX_WidgetView9","PUX_Icon","Color","disabled","onClick","stopPropagation","_PUX_WidgetView10","PUX_PseudoDropDown","Options","onInput","Option","_PUX_WidgetView11","PUX_Button","_PUX_WidgetView12","PUX_Checkbox","checked","indeterminate","_PUX_WidgetView13","PUX_Radiobutton","_PUX_WidgetView14","PUX_Gauge","_PUX_WidgetView15","PUX_Progressbar","_PUX_WidgetView16","PUX_Slider","_len5","_this7","_key5","_ValueToShow","Hashmarks","activeElement","base","HashmarkId","HashmarkList","isArray","Item","Label","bind","_PUX_WidgetView17","PUX_TextlineInput","_len6","_this8","_key6","Suggestions","SuggestionId","SuggestionList","_PUX_WidgetView18","PUX_PasswordInput","_len7","_this9","_key7","_PUX_WidgetView19","PUX_NumberInput","_len8","_this10","_key8","_PUX_WidgetView20","PUX_PhoneNumberInput","_len9","_this11","_key9","_PUX_WidgetView21","PUX_EMailAddressInput","_this12","_len10","_key10","_PUX_WidgetView22","PUX_URLInput","_len11","_this13","_key11","_PUX_WidgetView23","PUX_TimeInput","_len12","_this14","_key12","_PUX_WidgetView24","PUX_DateTimeInput","_this15","_len13","_key13","_PUX_WidgetView25","PUX_DateInput","_this16","_len14","_key14","_PUX_WidgetView26","PUX_WeekInput","_this17","_len15","_key15","_PUX_WidgetView27","PUX_MonthInput","_len16","_this18","_key16","_PUX_WidgetView28","PUX_SearchInput","_this19","_len17","_key17","_PUX_WidgetView29","PUX_FileInput","_this20","_len18","_key18","Placeholder","onDrop","_PUX_WidgetView30","PUX_ColorInput","_len19","_this21","_key19","_PUX_WidgetView31","PUX_DropDown","_this22","_len20","_key20","_PUX_WidgetView32","PUX_TextInput","_len21","_this23","_key21","_PUX_WidgetView33","PUX_FileDropArea","_PUX_WidgetView34","PUX_Accordion","PUX_Fold","_PUX_WidgetView35","Expansion","_PUX_WidgetView36","PUX_Deck","activeCard","PUX_centered","PUX_Card","_PUX_WidgetView37","_PUX_WidgetView38","PUX_TabStrip","activeTab","Index","PUX_Tab","dispatchEvent","CustomEvent","detail","activateTab","_PUX_WidgetView39","active","Prefix","ClassNames","ClassSet","split","filter","ClassName","join","_PUX_WidgetView40","PUX_FlatListView","List","ItemRenderer","selectedIndices","SelectionLimit","onSelectionChange","onItemSelected","onItemDeselected","expectArray","allowFunction","allowTextline","allowListSatisfying","ValueIsOrdinal","selectedIndexSet","selectedIndex","deselectedIndices","deselectedIndex","ItemIsSelected","IndicesToSelect","IndicesToDeselect","SelectionChanged","shiftKey","metaKey","shift","_PUX_WidgetView41","PUX_NestedListView","LabelOfItem","ContentListOfItem","selectedPaths","SelectionMode","onItemDoubleClicked","expandedPaths","Indentation","onExpansionChange","onItemExpanded","onItemCollapsed","ValueIsOrdinalList","ItemAtPath","Path","ContentList","ValueIsArray","ItemAtPathExists","PathsAreEqual","PathA","PathB","every","IndexOfPathIn","PathList","ItemInContainer","ItemPath","ContainerPath","expectFunction","allowOneOf","renderedItem","Offset","isSelected","isExpanded","ItemIsExpanded","hasContent","PathsToSelect","PathsToDeselect","processSelectionClick","processDoubleClick","onExpansionClick","ExpansionIndex","processExpansionClick","_PUX_WidgetView42","PUX_Placeholder","Substitute","_Component8","children"],"mappings":"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"}