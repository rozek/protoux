{"version":3,"file":"protoux.modern.js","sources":["../src/protoux.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                                ProtoUX (PUX)                                 *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n//  throwError,\n    quoted,\n    ValueIsOrdinal,\n    ValueIsString, ValueIsNonEmptyString,\n    ValueIsPlainObject,\n    ValueIsArray, ValueIsListSatisfying,\n    ValueIsFunction,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    allowOrdinal,\n    allowTextline,\n    expectArray, allowListSatisfying,\n    allowFunction, expectFunction,\n    allowOneOf,\n    allowURL,\n  } from 'javascript-interface-library'\n\n  import { render, html, Component } from 'htm/preact'\n\n  import hyperactiv from 'hyperactiv'\n  const  { observe, computed, dispose } = hyperactiv\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** install stylesheet for ProtoUX ****/\n\n  const Stylesheet = document.createElement('style')\n    Stylesheet.setAttribute('id','ProtoUX')\n    Stylesheet.innerHTML = `/*******************************************************************************\n*                                                                              *\n*                                ProtoUX (PUX)                                 *\n*                                                                              *\n*******************************************************************************/\n\n  .PUX {\n    display:block; position:absolute;\n    margin:0px;\n    background:none;\n    border:none; border-radius:0px;\n    box-shadow:none;\n    padding:0px;\n  }\n\n  .PUX.Screen {\n    background:white; color:black;\n    font-family:'Source Sans Pro','Helvetica Neue',Helvetica,Arial,sans-serif;\n    font-size:14px; font-weight:normal; line-height:1.4; color:black;\n    text-align:left; text-shadow:none;\n  }\n\n  .textured { background-image:repeat }\n\n  .vertically-centered {\n    display:flex; align-items:center;\n  }\n\n  .disabled, [disabled] { opacity:0.3 }\n  .readonly             { background:none }\n  .no-pointer-events    { pointer-events:none }\n\n  .scrollable   { overflow:scroll }\n  .scrollable-x { overflow-x:scroll; overflow-y:hidden }\n  .scrollable-y { overflow-x:hidden; overflow-y:scroll }\n\n  .PUX.Box       { background-color:white }\n  .PUX.Container {}\n  .PUX.Group     {}\n\n  .PUX.Title    { font-size:20px; font-weight:normal; padding:0px 0px 0px 0px; text-align:left }\n  .PUX.Subtitle { font-size:16px; font-weight:normal; padding:0px 0px 0px 0px; text-align:left }\n  .PUX.Label    { font-size:14px; font-weight:bold;   padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Textline { font-size:14px; font-weight:normal; padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Hint     { font-size:12px; font-weight:normal; padding:4px 0px 0px 0px; text-align:left }\n  .PUX.Text     { font-size:14px; font-weight:normal; padding:2px 0px 0px 0px; text-align:justify }\n\n  .PUX.HTMLView  {}\n  .PUX.TextView  {}\n  .PUX.ImageView { object-fit:contain; object-position:center center }\n  .PUX.WebView   {}\n\n  .PUX.Icon { width:24px; height:24px }\n\n  .PUX.PseudoDropDown { width:24px; height:24px }\n  .PUX.PseudoDropDown > select {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n\n  .PUX.Button > button, .PUX.Checkbox > input, .PUX.Radiobutton > input,\n  .PUX.Gauge > meter, .PUX.Progressbar > progress, .PUX.Slider > input,\n  .PUX.TextlineInput > input, .PUX.PasswordInput > input,\n  .PUX.NumberInput > input, .PUX.PhoneNumberInput > input,\n  .PUX.EMailAddressInput > input, .PUX.URLInput > input,\n  .PUX.TimeInput > input, .PUX.DateTimeInput > input, .PUX.DateInput > input,\n  .PUX.WeekInput > input, .PUX.MonthInput > input, .PUX.SearchInput > input,\n  .PUX.ColorInput > input, .PUX.DropDown > select, .PUX.FileInput > input,\n  .PUX.TextInput > textarea {\n    left:0px; top:0px; width:100%; height:100%;\n    margin:0px; padding:0px;\n    background:transparent; color:inherit;\n  }\n\n  .PUX.TextlineInput > input, .PUX.PasswordInput > input,\n  .PUX.NumberInput > input, .PUX.PhoneNumberInput > input,\n  .PUX.EMailAddressInput > input, .PUX.URLInput > input,\n  .PUX.TimeInput > input, .PUX.DateTimeInput > input, .PUX.DateInput > input,\n  .PUX.WeekInput > input, .PUX.MonthInput > input, .PUX.SearchInput > input,\n  .PUX.ColorInput > input, .PUX.DropDown > select, .PUX.FileInput > input,\n  .PUX.TextInput > textarea {\n    border:solid 1px #888888; border-radius:2px;\n    background:#e8f0ff; padding:0px 2px 0px 2px;\n  }\n\n  .PUX.TextlineInput > input:read-only, .PUX.PasswordInput > input:read-only,\n  .PUX.NumberInput > input:read-only, .PUX.PhoneNumberInput > input:read-only,\n  .PUX.EMailAddressInput > input:read-only, .PUX.URLInput > input:read-only,\n  .PUX.TimeInput > input:read-only, .PUX.DateTimeInput > input:read-only,\n  .PUX.DateInput > input:read-only, .PUX.WeekInput > input:read-only,\n  .PUX.MonthInput > input:read-only, .PUX.SearchInput > input:read-only,\n  .PUX.ColorInput > input:read-only, .PUX.DropDown > select:read-only,\n  .PUX.FileInput > input:read-only, .PUX.TextInput > textarea:read-only {\n    background:transparent;\n  }\n\n  .PUX.Button > button {\n    background:white;\n    border:solid 1px black; border-radius:4px;\n    background:transparent; color:inherit;\n  }\n\n  .PUX.FileInput {\n    color:lightgray;\n    border:solid 1px black; border-radius:3px;\n  }\n  .PUX.FileInput > span {\n    display:flex; align-items:center; position:absolute; overflow:hidden;\n    left:0px; top:0px; width:100%; height:100%;\n    padding:0px 2px 0px 2px; text-overflow:ellipsis;\n  }\n\n  .PUX.TextInput > textarea { border:none; background:#e8f0ff; padding:2px }\n  .PUX.TextInput.no-resize > textarea { resize:none }\n\n  .PUX.horizontalSeparator {\n    height:1px; margin:0px; margin-top:7px;\n    border:none; border-top:solid 1px black\n  }\n  .PUX.verticalSeparator {\n    width:1px; margin:0px; margin-left:7px;\n    border:none; border-left:solid 1px black\n  }\n\n  .PUX.FileDropArea {/*\n    display:flex; flex-flow:column nowrap;\n      justify-content:center; align-items:center;*/\n    border:dashed 4px #DDDDDD; border-radius:4px;\n    color:#DDDDDD;\n  }\n\n  .PUX.FileDropArea * { pointer-events:none }\n\n  .PUX.FileDropArea > input[type=\"file\"] {\n    display:block; position:absolute; appearance:none;\n    left:0px; top:0px; right:0px; bottom:0px;\n    opacity:0.01;\n  }\n\n  .PUX.Accordion {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:auto;\n  }\n\n  .PUX.Fold {\n    display:block; position:relative;\n    left:0px; top:0px; width:100%; bottom:auto;\n  }\n\n  .PUX.Fold-Header {\n    display:block; position:relative;\n    width:100%; height:30px; background:#EEEEEE; border:none;\n    border-top:   solid 1px #FFFFFF;\n    border-bottom:solid 1px #AAAAAA;\n  }\n\n  .PUX.Fold-Expander {\n    left:2px; top:2px; width:24px; height:24px;\n  }\n\n  .PUX.Fold-Title {\n    left:30px; top:0px; bottom:0px; right:0px;\n    font-size:14px; font-weight:bold; color:black; line-height:30px;\n  }\n\n  .PUX.Fold-Content {\n    display:block; position:relative;\n    left:0px; top:0px; width:100%; height:auto;\n  }\n  .PUX.Deck {}\n\n  .PUX.Card {\n    left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto;\n    border:none;\n  }\n  .PUX.TabStrip {\n    display:flex; flex-flow:row nowrap; align-items:stretch;\n  }\n\n  .PUX.Tab {\n    display:block; position:relative;\n    left:0px; top:0px; height:100%; width:auto;\n    border:none; border-width:0px 0px 4px 0px;\n  }\n  .PUX.Tab.active { border-style:solid; border-color:black }\n\n  .PUX.Tab > * { pointer-events:none }\n\n  .PUX.FlatListView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:scroll; overflow-x:auto; overflow-y:scroll;\n  }\n\n  .PUX.FlatListView > div {\n    display:block; position:relative; overflow:hidden; flex:0 0 auto;\n    left:0px; top:0px; width:auto; height:22px; line-height:22px;\n    background:none;\n    border:none; border-bottom:solid 1px light-gray;\n    white-space:nowrap; text-overflow:ellipsis;\n    user-select:none;\n  }\n\n  .PUX.FlatListView > div:last-child {\n    border:none; border-bottom:solid 1px transparent;\n  }\n\n  .PUX.FlatListView > div.selected {\n    background:dodgerblue; color:white;\n  }\n\n\n  .PUX.NestedListView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n    overflow:scroll; overflow-x:auto; overflow-y:scroll;\n  }\n\n  .PUX.NestedListView .ItemView {\n    display:flex; flex-flow:column nowrap; align-items:stretch;\n      position:relative; overflow:hidden; flex:0 0 auto;\n    left:0px; top:0px; width:auto; height:auto;\n    background:none; border:none;\n    user-select:none;\n  }\n\n  .PUX.NestedListView .ItemLine {\n    display:flex; flex-flow:row nowrap; align-items:stretch;\n      position:relative; flex:0 0 auto;\n    height:22px; line-height:22px;\n    white-space:nowrap; text-overflow:ellipsis;\n  }\n\n  .PUX.NestedListView .ItemIcon {\n    display:inline-block; position:relative;\n    margin:6px 2px 0px 2px; width:10px; height:10px;\n    pointer-events:none;\n  }\n\n  .PUX.NestedListView .ItemExpander {\n    display:inline-block; position:relative;\n    margin-top:4px; width:14px; height:14px;\n    pointer-events:auto;\n  }\n\n  .PUX.NestedListView .ItemLabel {\n    display:inline-block; position:relative; flex:1 0 auto;\n    pointer-events:none;\n  }\n\n  .PUX.NestedListView .ItemLine.selected > .ItemLabel {\n    background:dodgerblue; color:white;\n  }\n\n  .PUX.ModalLayer {\n    display:block; position:absolute;\n    background:rgba(0,0,0,0.3); border:none;\n  }\n\n\n  .PUX.Dialog, .PUX.ResizableDialog {\n    display:block; position:absolute;\n    border:solid 1px #000000; border-radius:4px;\n    background:white; color:black;\n    box-shadow:0px 0px 10px 0px rgba(0,0,0,0.3);\n  }\n\n  .PUX.Dialog > .Titlebar, .PUX.ResizableDialog > .Titlebar {\n    display:block; position:absolute; overflow:hidden;\n    left:0px; top:0px; right:0px; height:30px;\n    background:#EEEEEE; border:none; border-radius:3px 3px 0px 0px;\n    user-select:none;\n  }\n\n  .PUX.Dialog > .Titlebar > .Title, .PUX.ResizableDialog > .Titlebar > .Title {\n    display:block; position:absolute;\n    left:6px; top:3px; right:30px; height:18px;\n    border:none;\n    font-weight:bold; color:black;\n    user-select:none; pointer-events:none;\n  }\n\n  .PUX.Dialog > .Titlebar > .CloseButton, .PUX.ResizableDialog > .Titlebar > .CloseButton {\n    display:block; position:absolute;\n    top:0px; right:0px; width:30px; height:30px;\n    border:none;\n    user-select:none;\n  }\n\n  .PUX.ResizableDialog > .ContentPane {\n    display:block; position:absolute;\n    left:0px; top:0px; right:0px; bottom:9px;\n    border:none;\n  }\n\n  .PUX.ResizableDialog > .leftResizer {\n    display:block; position:absolute;\n    left:0px; bottom:0px; width:30px; height:9px;\n    border:none; border-top:solid 1px black; border-right:solid 1px black;\n    border-radius:0px 0px 0px 3px;\n    cursor:nesw-resize;\n  }\n\n  .PUX.ResizableDialog > .middleResizer {\n    display:block; position:absolute;\n    left:30px; bottom:0px; right:30px; height:9px;\n    border:none; border-top:solid 1px black;\n    border-radius:0px;\n    cursor:ns-resize;\n  }\n\n  .PUX.ResizableDialog > .rightResizer {\n    display:block; position:absolute;\n    bottom:0px; right:0px; width:30px; height:9px;\n    border:none; border-left:solid 1px black; border-top:solid 1px black;\n    border-radius:0px 0px 3px 0px;\n    cursor:nwse-resize;\n  }\n\n\n\n/**** centered ****/\n\n  .centered {\n    display:block; position:relative;\n    width:100%; height:100%; max-height:240px;\n  }\n\n  .centered > * {\n    display:block; position:absolute;\n    left:50%; top:50%;\n    transform:translate(-55%,-50%);\n    white-space:nowrap;\n  }\n\n`\n  document.head.appendChild(Stylesheet)\n\n/**** throwError - simplifies construction of named errors ****/\n\n  export function throwError (Message:string):never {\n    let Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message)\n    if (Match == null) {\n      throw new Error(Message)\n    } else {\n      let namedError = new Error(Match[2])\n        namedError.name = Match[1]\ndebugger\n      throw namedError\n    }\n  }\n\n/**** throwReadOnlyError ****/\n\n// @ts-ignore TS2534 why is TS complaining here?\n  export function throwReadOnlyError (Name:string):never {\n    throwError(\n      'ReadOnlyProperty: property ' + quoted(Name) + ' must not be set'\n    )\n  }\n\n/**** DragRecognizerFor ****/\n\n  const DragRecognizerForWidget:WeakMap<Indexable,Function> = new WeakMap()\n\n  export function DragRecognizerFor (\n    Widget:Indexable, OptionSet:Indexable\n  ):Function {\n    let DragRecognizer = DragRecognizerForWidget.get(Widget)\n    if (DragRecognizer != null) { return DragRecognizer }\n\n    function DummyCallback () {}\n\n    function consumeEvent (Event:Event):void {\n      Event.stopImmediatePropagation()\n      Event.preventDefault()      // prevent mouse event from being sent as well\n    }\n\n/*C*/ let PointerTarget:HTMLElement|undefined\n/*C*/        // workaround for undesired disappearance of pointer capture target\n\n    let {\n      onlyFrom, neverFrom, Threshold = 0,\n      onDragStarted  = DummyCallback, onDragContinued = DummyCallback,\n      onDragFinished = DummyCallback, onDragCancelled = DummyCallback\n    } = OptionSet\n\n    let State = 'idle'                       // one of 'idle','observing','busy'\n    let x0:number,y0:number\n\n  /**** PointerEvent Handlers ****/\n\n    function onPointerDown (Event:PointerEvent):void {\n      if (! Event.isPrimary) { return }\n\n      if (onlyFrom != null) {\n        if (\n          (onlyFrom instanceof HTMLElement) && (onlyFrom !== Event.target) ||\n          (typeof onlyFrom === 'string') && ! (Event.target as HTMLElement).matches(onlyFrom)\n        ) { return }\n      }\n\n      if (neverFrom != null) {\n        if (\n          (neverFrom instanceof HTMLElement) && (neverFrom === Event.target) ||\n          (typeof neverFrom === 'string') && (Event.target as HTMLElement).matches(neverFrom)\n        ) { return }\n      }\n\n      if (Event.button === 0) {\n        (Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/ PointerTarget = Event.target as HTMLElement\n        if (State === 'idle') {\n          ;({ pageX:x0, pageY:y0 } = Event)\n          if (Threshold > 0) {\n            State = 'observing'    // wait for actual movement to start dragging\n          } else {\n            startDragging(Event)\n          }\n        }\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerMove (Event:PointerEvent):void {\n/*C*/ if ((State !== 'idle') && (Event.target !== PointerTarget)) {\n/*C*/   ;(Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/   PointerTarget = Event.target as HTMLElement\n/*C*/ console.log('ProtoUX: PointerTarget changed')\n/*C*/ }\n\n      if (State === 'observing') {                     // before actual dragging\n        let { pageX:x,pageY:y } = Event\n        if ((x0-x)**2 + (y0-y)**2 >= Threshold**2) { startDragging(Event) }\n      } else {\n        if (State === 'busy') { continueDragging(Event) }\n      }\n    }\n\n    function onPointerUp (Event:PointerEvent):void {\n      if (State === 'busy') {\n        finishDragging(Event)\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerCancel (Event:PointerEvent):void {\n      abortDragging(Event)\n    }\n\n  /**** State Transitions ****/\n\n    function startDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'busy'\n      let { pageX:x,pageY:y } = Event\n      onDragStarted(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function continueDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      let { pageX:x,pageY:y } = Event\n      onDragContinued(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function finishDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'idle'\n      let { pageX:x,pageY:y } = Event\n      onDragFinished(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n/*C*/ PointerTarget = undefined\n    }\n\n    function abortDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      if (State !== 'idle') {\n        const wasBusy = (State === 'busy')\n          State = 'idle'\n          ;(Event.target as HTMLElement).releasePointerCapture(Event.pointerId) // if called from ext.\n        if (wasBusy) { onDragCancelled(Math.round(x0),Math.round(y0), 0,0, Event) }\n      }\n/*C*/ PointerTarget = undefined\n    }\n\n  /**** return generic callback ****/\n\n    DragRecognizer = function (Event:PointerEvent):void {\n      switch (Event.type) {\n        case 'pointerdown':  return onPointerDown(Event)\n        case 'pointermove':  return onPointerMove(Event)\n        case 'pointerup':    return onPointerUp(Event)\n        case 'pointercancel':return onPointerCancel(Event)\n      }\n    }\n// @ts-ignore TS2339 allow assignment\n      DragRecognizer.abortDragging = abortDragging        // externally callable\n    DragRecognizerForWidget.set(Widget,DragRecognizer)\n\n    return DragRecognizer\n  }\n\n/**** DragClickRecognizerFor ****/\n\n  const DragClickRecognizerForWidget:WeakMap<Indexable,Function> = new WeakMap()\n\n  export function DragClickRecognizerFor (\n    Widget:Indexable, OptionSet:Indexable\n  ):Function {\n    let DragClickRecognizer = DragClickRecognizerForWidget.get(Widget)\n    if (DragClickRecognizer != null) { return DragClickRecognizer }\n\n    function DummyCallback () {}\n\n    function consumeEvent (Event:Event):void {\n      Event.stopImmediatePropagation()\n      Event.preventDefault()\n    }\n\n/*C*/ let PointerTarget:HTMLElement|undefined\n/*C*/        // workaround for undesired disappearance of pointer capture target\n\n    let {\n      onlyFrom, neverFrom, Threshold = 0,\n      onDragStarted  = DummyCallback, onDragContinued = DummyCallback,\n      onDragFinished = DummyCallback, onDragCancelled = DummyCallback,\n      onClicked = DummyCallback,\n      MultiClickTimeSpan = 300, onMultiClick = DummyCallback\n    } = OptionSet\n\n    let State = 'idle'                       // one of 'idle','observing','busy'\n    let x0:number,y0:number\n    let lastClickTime = 0, lastClickType = 0\n\n  /**** PointerEvent Handlers ****/\n\n    function onPointerDown (Event:PointerEvent):void {\n      if (! Event.isPrimary) { return }\n\n      if (onlyFrom != null) {\n        if (\n          (onlyFrom instanceof HTMLElement) && (onlyFrom !== Event.target) ||\n          (typeof onlyFrom === 'string') && ! (Event.target as HTMLElement).matches(onlyFrom)\n        ) { return }\n      }\n\n      if (neverFrom != null) {\n        if (\n          (neverFrom instanceof HTMLElement) && (neverFrom === Event.target) ||\n          (typeof neverFrom === 'string') && (Event.target as HTMLElement).matches(neverFrom)\n        ) { return }\n      }\n\n      if (Event.button === 0) {\n        (Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/ PointerTarget = Event.target as HTMLElement\n        if (State === 'idle') {\n          ;({ pageX:x0, pageY:y0 } = Event)\n          if (Threshold > 0) {\n            State = 'observing'    // wait for actual movement to start dragging\n          } else {\n            startDragging(Event)\n          }\n        }\n      } else {\n        abortDragging(Event)\n      }\n    }\n\n    function onPointerMove (Event:PointerEvent):void {\n/*C*/ if ((State !== 'idle') && (Event.target !== PointerTarget)) {\n/*C*/   ;(Event.target as HTMLElement).setPointerCapture(Event.pointerId)\n/*C*/   PointerTarget = Event.target as HTMLElement\n/*C*/ console.log('ProtoUX: PointerTarget changed')\n/*C*/ }\n\n      if (State === 'busy')      { return continueDragging(Event) }\n      if (State === 'observing') {                     // before actual dragging\n        let { pageX:x,pageY:y } = Event\n        if ((x0-x)**2 + (y0-y)**2 >= Threshold**2) { startDragging(Event) }\n      }\n    }\n\n    function onPointerUp (Event:PointerEvent):void {\n      if (State === 'busy')      { return finishDragging(Event) }\n      if (State === 'observing') {\n        consumeEvent(Event)\n\n        State = 'idle'\n        onClicked(x0,y0, Event)\n\n        let now = Date.now()\n        if (now-lastClickTime < MultiClickTimeSpan) {\n          lastClickType += 1\n          if (lastClickType > 1) { onMultiClick(lastClickType, x0,y0, Event) }\n        } else {\n          lastClickType = 1\n        }\n        lastClickTime = now\n      }\n    }\n\n    function onPointerCancel (Event:PointerEvent):void {\n      abortDragging(Event)\n    }\n\n  /**** State Transitions ****/\n\n    function startDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'busy'\n      let { pageX:x,pageY:y } = Event\n      onDragStarted(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function continueDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      let { pageX:x,pageY:y } = Event\n      onDragContinued(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n    }\n\n    function finishDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      State = 'idle'\n      let { pageX:x,pageY:y } = Event\n      onDragFinished(\n        Math.round(x),Math.round(y), Math.round(x-x0),Math.round(y-y0), Event\n      )\n/*C*/ PointerTarget = undefined\n    }\n\n    function abortDragging (Event:PointerEvent):void {\n      consumeEvent(Event)\n\n      if (State !== 'idle') {\n        const wasBusy = (State === 'busy')\n          State = 'idle'\n          ;(Event.target as HTMLElement).releasePointerCapture(Event.pointerId) // if called from ext.\n        if (wasBusy) { onDragCancelled(Math.round(x0),Math.round(y0), 0,0, Event) }\n      }\n/*C*/ PointerTarget = undefined\n    }\n\n  /**** return generic callback ****/\n\n    DragClickRecognizer = function (Event:PointerEvent):void {\n      switch (Event.type) {\n        case 'pointerdown':  return onPointerDown(Event)\n        case 'pointermove':  return onPointerMove(Event)\n        case 'pointerup':    return onPointerUp(Event)\n        case 'pointercancel':return onPointerCancel(Event)\n      }\n    }\n// @ts-ignore TS2339 allow assignment\n      DragClickRecognizer.abortDragging = abortDragging   // externally callable\n    DragClickRecognizerForWidget.set(Widget,DragClickRecognizer)\n\n    return DragClickRecognizer\n  }\n\n//------------------------------------------------------------------------------\n//--                                 ProtoUX                                  --\n//------------------------------------------------------------------------------\n\n  export class ProtoUX {\n    private _IdPrefix:string\n\n    private _ImageFolder:string = ''\n\n    private _ScreenSet:Indexable    = {}         // just to satisfy the compiler\n    private _DialogSet:Indexable    = {}                                 // dto.\n    private _observed:Indexable     = observe({}, { deep:false })\n    private _UpdaterList:Function[] = []\n\n    private _StartScreen:Indexable   = {}        // just to satisfy the compiler\n    private _openScreen:Indexable    = {}                                // dto.\n    private _openDialogs:Indexable[] = []\n\n    private _View:PUX_View|undefined\n\n    private static _WidgetViewRegistry:Indexable = Object.create(null)\n\n  /**** constructor ****/\n\n    public constructor (IdPrefix:string = 'PUX') {\n      this._IdPrefix = IdPrefix\n    }\n\n  /**** ImageFolder - where to find image files ****/\n\n    public get ImageFolder ():string          { return this._ImageFolder }\n    public set ImageFolder (newFolder:string) {\n      newFolder = newFolder.trim()\n      if ((newFolder !== '') && ! newFolder.endsWith('/')) {\n        newFolder += '/'\n      }\n      this._ImageFolder = newFolder\n    }\n\n  /**** Style - represents the CSS stylesheet of a given ProtoUX project ****/\n\n    public get Style ():string {\n      const StyleId = this._IdPrefix + '-Style'\n      const Element = document.getElementById(StyleId)\n      return (Element == null ? '' : Element.innerHTML)\n    }\n\n    public set Style (newStyle:string) {\n      const StyleId = this._IdPrefix + '-Style'\n\n      let ImageFolder = this._ImageFolder\n      if (ImageFolder !== '') {\n        newStyle = newStyle.replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      let Element = document.getElementById(StyleId)\n      if (Element == null) {\n        Element = document.createElement('style')\n          Element.setAttribute('id',StyleId)\n        document.head.appendChild(Element)\n      }\n      Element.innerHTML = newStyle\n    }\n\n  /**** ScreenSet - represents the set of screens in a ProtoUX project ****/\n\n    public get ScreenSet ():Indexable       { return this._ScreenSet }\n    public set ScreenSet (newSet:Indexable) {\n      this._ScreenSet = newSet\n\n      for (let ScreenName in newSet) {    // sets a default \"StartScreen\", hacky\n        this._StartScreen = newSet[ScreenName]\n        break\n      }\n\n      for (let ScreenName in newSet) {      // prepare for \"packing\", if desired\n        Object.assign(newSet[ScreenName], { dX:0,dY:0, dW:0,dH:0 })\n      }\n    }\n\n  /**** observed - makes ProtoUX projects \"reactive\" ****/\n\n    public get observed ():Indexable  { return this._observed }\n    public set observed (_:Indexable) { throwReadOnlyError('observed') }\n\n  /**** ScreenNamed ****/\n\n    public ScreenNamed (ScreenName:string):Indexable|undefined {\n      return this._ScreenSet[ScreenName]\n    }\n\n  /**** existingScreenNamed ****/\n\n    public existingScreenNamed (ScreenName:string):Indexable {\n      const Screen = this._ScreenSet[ScreenName]\n      if (Screen == null) throwError(\n        'NoSuchScreen: a screen named ' + quoted(ScreenName) + ' does not exist'\n      )\n\n      return Screen\n    }\n\n  /**** packScreen ****/\n\n    public packScreen (\n      ScreenName:string, padX:number = 10, padY?:number\n    ):void {\n      if (padY == null) { padY = padX }\n\n      const Screen = this.existingScreenNamed(ScreenName)\n      if (Screen.packedGeometry == null) { return }\n\n      let { x,y, Width,Height } = Screen.packedGeometry\n        x -= padX; Width  += 2*padX\n        y -= padY; Height += 2*padY\n      Screen.Width  = Width\n      Screen.Height = Height\n\n      Screen.WidgetList.forEach((Widget:Indexable) => {\n        if (Widget.hidden) { return }\n\n        Widget.x -= x\n        Widget.y -= y\n      })\n    }\n\n  /**** openScreen ****/\n\n    public openScreen (ScreenName:string):void {\n      const Screen = this.existingScreenNamed(ScreenName)\n      if (this._openScreen === Screen) { return }\n\n      this._openScreen = Screen\n      this.rerender()\n    }\n\n  /**** closeScreen ****/\n\n    public closeScreen (ScreenName:string):void {\n      const Screen = this.ScreenNamed(ScreenName)\n      if (Screen == null) { return }\n\n      if (this._openScreen !== Screen) { return }\n\n      this._openScreen = this._StartScreen\n      this.rerender()\n    }\n\n  /**** ScreenIsOpen ****/\n\n    public ScreenIsOpen (ScreenName:string):boolean {\n      const Screen = this.existingScreenNamed(ScreenName)\n      return (this._openScreen === Screen)\n    }\n\n  /**** startWithScreen ****/\n\n    public startWithScreen (ScreenName:string):void {\n      this._StartScreen = this.existingScreenNamed(ScreenName)\n      this.openScreen(ScreenName)\n    }\n\n  /**** StartScreen ****/\n\n    public get StartScreen ():Indexable  { return this._StartScreen }\n    public set StartScreen (_:Indexable) { throwReadOnlyError('StartScreen') }\n\n  /**** extractAllDialogs ****/\n\n    public extractAllDialogs ():void {\n      for (let ScreenName in this._ScreenSet) {\n        const WidgetList = this._ScreenSet[ScreenName].WidgetList\n        for (let i = WidgetList.length-1; i >= 0; i--) {\n          const Widget = WidgetList[i]\n          if ((Widget.Type === 'Dialog') || (Widget.Type === 'ResizableDialog')) {\n            if (! ValueIsNonEmptyString(Widget.Name)) {\n              console.error('Dialog without name in screen \"' + ScreenName + '\"')\n              continue\n            }\n\n            if (Widget.Name in this._DialogSet) {\n              console.error('a dialog with name \"' + Widget.Name + '\" has already been registered')\n              continue\n            }\n\n            this._DialogSet[Widget.Name] = Widget\n            WidgetList.splice(i,1)\n          }\n        }\n      }\n    }\n\n  /**** DialogNamed ****/\n\n    public DialogNamed (DialogName:string):Indexable|undefined {\n      return this._DialogSet[DialogName]\n    }\n\n  /**** existingDialogNamed ****/\n\n    public existingDialogNamed (DialogName:string):Indexable {\n      const Dialog = this._DialogSet[DialogName]\n      if (Dialog == null) throwError(\n        'NoSuchDialog: a dialog named ' + quoted(DialogName) + ' does not exist'\n      )\n\n      return Dialog\n    }\n\n  /**** openDialog ****/\n\n    public openDialog (DialogName:string):void {\n      const Dialog = this.existingDialogNamed(DialogName)\n\n      const DialogIndex = this._openDialogs.indexOf(Dialog)\n      if (DialogIndex >= 0) {\n        if (DialogIndex === this._openDialogs.length-1) { return }\n        this._openDialogs.splice(DialogIndex,1)\n      }\n\n      this._openDialogs.push(Dialog)\n      this.rerender()\n\n      if (typeof Dialog.onOpen === 'function') { Dialog.onOpen(Dialog) }\n    }\n\n  /**** closeDialog ****/\n\n    public closeDialog (DialogName:string):void {\n      let Dialog = this.DialogNamed(DialogName)\n      if (Dialog == null) { return }\n\n      const DialogIndex = this._openDialogs.indexOf(Dialog)\n      if (DialogIndex < 0) { return }\n\n      this._openDialogs.splice(DialogIndex,1)\n      this.rerender()\n\n      if (typeof Dialog.onClose === 'function') { Dialog.onClose(Dialog) }\n    }\n\n  /**** DialogIsOpen ****/\n\n    public DialogIsOpen (DialogName:string):boolean {\n      let Dialog = this.existingDialogNamed(DialogName)\n      return (this._openDialogs.indexOf(Dialog) >= 0)\n    }\n\n  /**** openDialogs ****/\n\n    public get openDialogs ():Indexable[]  { return this._openDialogs.slice() }\n    public set openDialogs (_:Indexable[]) { throwReadOnlyError('openDialogs') }\n\n  /**** closeAllDialogs ****/\n\n    public closeAllDialogs ():void {\n      this._openDialogs.length = 0\n      this.rerender()\n    }\n\n  /**** DialogIsFrontMost ****/\n\n    public DialogIsFrontMost (DialogName:string):boolean {\n      let Dialog = this.existingDialogNamed(DialogName)\n      return (this._openDialogs.indexOf(Dialog) === this._openDialogs.length-1)\n    }\n\n  /**** bringDialogToFront ****/\n\n    public bringDialogToFront (DialogName:string):void {\n      this.openDialog(DialogName)\n    }\n\n  /**** WidgetNamed ****/\n\n    public WidgetNamed (WidgetName:string):Indexable|undefined {\n      const ScreenSet = this._ScreenSet\n      for (let ScreenName in ScreenSet) {\n        const WidgetList = ScreenSet[ScreenName].WidgetList\n        for (let i = 0, l = WidgetList.length; i < l; i++) {\n          if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n        }\n      }\n      return undefined\n    }\n\n  /**** existingWidgetNamed ****/\n\n    public existingWidgetNamed (WidgetName:string):Indexable {\n      const Widget = this.WidgetNamed(WidgetName)\n      if (Widget == null) throwError(\n        'NoSuchWidget: a widget named ' + quoted(WidgetName) + ' does not exist'\n      )\n\n      return Widget\n    }\n\n  /**** WidgetOnScreen/Dialog ****/\n\n    public WidgetOnScreen (WidgetName:string, Screen:Indexable):Indexable|undefined {\n      const WidgetList = Screen.WidgetList || []\n      for (let i = 0, l = WidgetList.length; i < l; i++) {\n        if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n      }\n      return undefined\n    }\n\n    public WidgetOnDialog (WidgetName:string, Dialog:Indexable):Indexable|undefined {\n      return this.WidgetOnScreen(WidgetName,Dialog)            // keeps code DRY\n    }\n\n  /**** existingWidgetOnScreen/Dialog ****/\n\n    public existingWidgetOnScreen (WidgetName:string, Screen:Indexable):Indexable {\n      const Widget = this.WidgetOnScreen(WidgetName,Screen)\n      if (Widget == null) throwError(\n        'NoSuchWidget: screen ' + quoted(Screen.Name) + ' does not contain ' +\n        'a widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n    public existingWidgetOnDialog (WidgetName:string, Dialog:Indexable):Indexable {\n      const Widget = this.WidgetOnDialog(WidgetName,Dialog)\n      if (Widget == null) throwError(\n        'NoSuchWidget: dialog ' + quoted(Dialog.Name) + ' does not contain ' +\n        'a widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n  /**** WidgetInContainer ****/\n\n    public WidgetInContainer (WidgetName:string, Container:Indexable):Indexable|undefined {\n      const WidgetList = Container.WidgetList || []\n      for (let i = 0, l = WidgetList.length; i < l; i++) {\n        if (WidgetList[i].Name === WidgetName) { return WidgetList[i] }\n      }\n      return undefined\n    }\n\n  /**** existingWidgetInContainer ****/\n\n    public existingWidgetInContainer (WidgetName:string, Container:Indexable):Indexable {\n      const Widget = this.WidgetInContainer(WidgetName,Container)\n      if (Widget == null) throwError(\n        'NoSuchWidget: could not find widget named ' + quoted(WidgetName)\n      )\n\n      return Widget\n    }\n\n  /**** stuffing ****/\n\n    public stuff (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.stuffScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.stuffDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** stuffScreen ****/\n\n    public stuffScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let WidgetName in PropSet) {\n        let Widget = this.existingWidgetOnScreen(WidgetName,Screen)\n        this.stuffWidget(Widget,PropSet[WidgetName])\n      }\n    }\n\n  /**** stuffDialog ****/\n\n    public stuffDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let WidgetName in PropSet) {\n        let Widget = this.existingWidgetOnDialog(WidgetName,Dialog)\n        this.stuffWidget(Widget,PropSet[WidgetName])\n      }\n    }\n\n  /**** stuffWidget ****/\n\n    public stuffWidget (Widget:Indexable, PropSet:Indexable):void {\n      if (this.ValueIsStuff(PropSet)) {\n        const fromScreen = this.existingScreenNamed(PropSet.from)\n        Widget.WidgetList = (Widget.WidgetList || []).concat(PropSet.with.map(\n          (WidgetName:string) => this.existingWidgetOnScreen(WidgetName,fromScreen)\n        ))\n      } else {\n        for (let Property in PropSet) {\n          const innerWidget = this.existingWidgetInContainer(Property,Widget)\n          this.stuffWidget(innerWidget,PropSet[Property])\n        }\n      }\n    }\n\n  /**** ValueIsStuff ****/\n\n    public ValueIsStuff (Candidate:any):boolean {\n      return (\n        ValueIsPlainObject(Candidate) &&\n        ValueIsString(Candidate.from) &&\n        ValueIsListSatisfying(Candidate.with,ValueIsString)\n      )\n    }\n\n  /**** configure (w/o rerendering) ****/\n\n    public configure (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.configureScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.configureDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** configureScreen (w/o rerendering) ****/\n\n    public configureScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.configureWidget(Screen,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnScreen(Name,Screen)\n          this.configureWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** configureDialog (w/o rerendering) ****/\n\n    public configureDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.configureWidget(Dialog,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnDialog(Name,Dialog)\n          this.configureWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** configureWidget (w/o rerendering) ****/\n\n    public configureWidget (Widget:Indexable, PropSet:Indexable):void {\n      for (let Property in PropSet) {\n        let Value = PropSet[Property]\n        if (ValueIsPlainObject(Value) && ValueIsFunction(Value.Updater)) {\n          this._UpdaterList.push(computed(() => {\n            this.updateWidget(Widget, { [Property]:Value.Updater() })\n          }))\n        } else {\n          if (ValueIsPlainObject(Value) && (Widget.WidgetList != null)) {\n            const innerWidget = this.WidgetInContainer(Property,Widget)\n            if (innerWidget != null) {\n              this.configureWidget(innerWidget,Value)\n              continue\n            }\n          }\n\n          Widget[Property] = Value\n        }\n      }\n    }\n\n  /**** update (w/ rerendering) ****/\n\n    public update (PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        const Screen = this.ScreenNamed(Name)\n        if (Screen != null) {\n          this.updateScreen(Screen,PropSet[Name])\n          continue\n        }\n\n        const Dialog = this.DialogNamed(Name)\n        if (Dialog != null) {\n          this.updateDialog(Dialog,PropSet[Name])\n          continue\n        }\n\n        throwError(\n          'NoSuchScreenOrDialog: no screen or dialog named ' + quoted(Name) + ' found'\n        )\n      }\n    }\n\n  /**** updateScreen (w/o rerendering) ****/\n\n    public updateScreen (Screen:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.updateWidget(Screen,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnScreen(Name,Screen)\n          this.updateWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** updateDialog (w/o rerendering) ****/\n\n    public updateDialog (Dialog:Indexable, PropSet:Indexable):void {\n      for (let Name in PropSet) {\n        if (Name === 'self') {\n          this.updateWidget(Dialog,PropSet.self)\n        } else {\n          const Widget = this.existingWidgetOnDialog(Name,Dialog)\n          this.updateWidget(Widget,PropSet[Name])\n        }\n      }\n    }\n\n  /**** updateWidget (w/ rerendering) ****/\n\n    public updateWidget (Widget:Indexable,PropSet:Indexable):void {\n      for (let Property in PropSet) {\n        Widget[Property] = PropSet[Property]\n      }\n\n      const View = Widget.View\n      if (View != null) { View.rerender() }\n    }\n\n  /**** updatedFrom ****/\n\n    public updatedFrom (Updater:Function):Indexable {\n      return { Updater }\n    }\n\n  /**** View ****/\n\n    public get View ():PUX_View|undefined  { return this._View }\n    public set View (_:PUX_View|undefined) { throwReadOnlyError('View') }\n\n  /**** renderInto ****/\n\n    public renderInto (Container:HTMLElement):void {\n      render(html`<${PUX_View} ProtoUX=${this}/>`,Container)\n    }\n\n  /**** rerender ****/\n\n    public rerender ():void {\n      if (this._View != null) { this._View.rerender() }\n    }\n\n  /**** registerWidgetView ****/\n\n    public static registerWidgetView (Name:string, Class:Function):void {\n      ProtoUX._WidgetViewRegistry[Name] = Class\n    }\n\n  /**** WidgetViewForType ****/\n\n    public static WidgetViewForType (Name:string):Function|undefined {\n      return ProtoUX._WidgetViewRegistry[Name]\n    }\n\n\n  }\n\n//------------------------------------------------------------------------------\n//--                                 PUX_View                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_View extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      let ProtoUX = PropSet.ProtoUX\n      ProtoUX['_View'] = this                          // this is a hack, I know\n\n      const openScreen = ProtoUX._openScreen\n\n      const openDialogs      = ProtoUX._openDialogs.slice()\n      const frontmostDialog  = openDialogs.pop()\n      const frontmostIsModal = (frontmostDialog?.isModal == true)\n\n      return html`<div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; right:0px; bottom:0px;\n      \">\n        <${PUX_ScreenView} ProtoUX=${ProtoUX} Screen=${openScreen}/>\n        ${openDialogs.map((Dialog:Indexable) => {\n          return html`<${PUX_DialogView} ProtoUX=${ProtoUX} Dialog=${Dialog} key=${Dialog.Name}/>`\n        })}\n        ${frontmostIsModal ? html`<${PUX_ModalLayer}/>` : ''}\n        ${frontmostDialog == null\n          ? ''\n          : html`<${PUX_DialogView} ProtoUX=${ProtoUX} Dialog=${frontmostDialog} key=${frontmostDialog.Name}/>`\n        }\n      </div>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_ScreenView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_ScreenView extends Component {\n    public render (PropSet:Indexable):any {\n      const Screen = PropSet.Screen\n      Screen['View'] = this                            // this is a hack, I know\n\n      const { Id, Classes,Style, Width,Height, WidgetList } = Screen\n\n      return html`<div class=${ClassesWith('PUX Screen',Classes)} id=${Id} style=\"\n        width:${Width}px; height:${Height}px; ${Style || ''}\n      \">\n        ${WidgetList.map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n        )}\n      </div>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                             PUX_ModalLayer                             --\n//------------------------------------------------------------------------------\n\n  class PUX_ModalLayer extends Component {\n    public render (PropSet:Indexable):any {\n      const { Style } = PropSet\n\n      function onClick (Event:MouseEvent):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n      }\n\n      return html`<div class=\"PUX ModalLayer\" style=\"\n        ${Style || ''};\n        display:block; position:absolute;\n        left:0px; top:0px; right:0px; bottom:0px;\n      \" onClick=${onClick}/>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_DialogView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_DialogView extends Component {\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      if (Dialog.Type === 'ResizableDialog') {\n        return html`<${PUX_ResizableDialogView} Dialog=${Dialog} ProtoUX=${PropSet.ProtoUX}/>`\n      } else {\n        return html`<${PUX_StandardDialogView}  Dialog=${Dialog} ProtoUX=${PropSet.ProtoUX}/>`\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                          PUX_StandardDialogView                          --\n//------------------------------------------------------------------------------\n\n  class PUX_StandardDialogView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      Dialog.View = this\n\n      const moveDialog = (x:number,y:number, dx:number,dy:number) => {\n        Dialog.x = Dialog._DragOffset.x + dx\n        Dialog.y = Dialog._DragOffset.y + dy\n        Dialog.z = 20001000             // brings dialog to front while dragging\n        PropSet.ProtoUX.View.rerender()\n//      this.rerender() // does not seem to work for any reason\n      }\n\n      const moveDialogAndFinish = (x:number,y:number, dx:number,dy:number) => {\n        moveDialog(x,y, dx,dy)\n        Dialog.z = 2000000\n        PropSet.ProtoUX.bringDialogToFront(Dialog.Name)\n      }\n\n      const DragRecognizer = DragRecognizerFor(Dialog, {\n        neverFrom:      '.CloseButton',\n        Threshold:      4,\n        onDragStarted:  (x:number,y:number, dx:number,dy:number) => {\n          Dialog._DragOffset = { x:Dialog.x, y:Dialog.y }\n          moveDialog(x,y, dx,dy)\n        },\n        onDragContinued: moveDialog,\n        onDragFinished:  moveDialogAndFinish,\n        onDragCancelled: moveDialogAndFinish,\n      })\n\n      const {\n        Id, Classes,Style, x,y,z, Width,Height, Title, closeable,\n        View, WidgetList, ...otherProps\n      } = Dialog\n\n      const CSSGeometry = (\n        `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n      )\n\n      function onClose (Event:MouseEvent) {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (closeable !== false) { PropSet.ProtoUX.closeDialog(Dialog.Name) }\n      }\n\n      return html`<div class=${ClassesWith('PUX Dialog',Classes)} id=${Id} style=\"\n        ${Style || ''}; ${CSSGeometry}; z-index:${z || 2000000};\n      \" ...${otherProps}>\n        <div class=\"Titlebar\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        >\n          <div class=\"Title\">${Title}</div>\n          <img class=\"CloseButton\" src=\"${PropSet.ProtoUX._ImageFolder}/xmark.png\"\n            style=\"visibility:${closeable === false ? 'hidden' : 'visible'}\"\n            onClick=${onClose}/>\n        </div>\n\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n        )}\n      </>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                         PUX_ResizableDialogView                          --\n//------------------------------------------------------------------------------\n\n  class PUX_ResizableDialogView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Dialog = PropSet.Dialog\n      Dialog.View = this\n\n      let {\n        Id, Classes,Style, x,y,z, Width,Height, Title, closeable,\n        minWidth, minHeight, maxWidth, maxHeight,\n        View, WidgetList, ...otherProps\n      } = Dialog\n\n      allowOrdinal('minimal width', minWidth)\n      allowOrdinal('maximal width', maxWidth)\n      allowOrdinal('minimal height',minHeight)\n      allowOrdinal('maximal height',maxHeight)\n\n      if (minWidth  == null) { minWidth  = 120 }\n      if (maxWidth  == null) { maxWidth  = Infinity }\n      if (minHeight == null) { minHeight = 80 }\n      if (maxHeight == null) { maxHeight = Infinity }\n\n      minWidth  = Math.max(0,minWidth)\n      maxWidth  = Math.max(minWidth,maxWidth)\n      minHeight = Math.max(0,minHeight)\n      maxHeight = Math.max(minHeight,maxHeight)\n\n      const handleDrag = (x:number,y:number, dx:number,dy:number) => {\n        if (Dialog._DragMode === 'drag') {\n          moveDialog(dx,dy)\n        } else {\n          resizeDialog(dx,dy)\n        }\n        Dialog.z = 20001000             // brings dialog to front while dragging\n        PropSet.ProtoUX.View.rerender()\n//      this.rerender() // does not seem to work for any reason\n      }\n\n      const handleDragAndFinish = (x:number,y:number, dx:number,dy:number) => {\n        handleDrag(x,y, dx,dy)\n        Dialog.z = 2000000\n        PropSet.ProtoUX.bringDialogToFront(Dialog.Name)\n      }\n\n      const moveDialog = (dx:number,dy:number) => {\n        Dialog.x = Dialog._DragOffset.x + dx\n        Dialog.y = Dialog._DragOffset.y + dy\n      }\n\n      const resizeDialog = (dx:number,dy:number) => {\n        switch (Dialog._DragMode) {\n          case 'resize-sw':\n            let newWidth =  Math.max(minWidth,Math.min(Dialog._DragOffset.Width - dx,maxWidth))\n              dx = newWidth - Dialog._DragOffset.Width\n            Dialog.x     = Dialog._DragOffset.x     - dx\n            Dialog.Width = Dialog._DragOffset.Width + dx\n            break\n          case 'resize-se':\n            Dialog.Width = Math.max(minWidth,Math.min(Dialog._DragOffset.Width + dx,maxWidth))\n        }\n        Dialog.Height = Math.max(minHeight,Math.min(Dialog._DragOffset.Height + dy,maxHeight))\n      }\n\n      const DragRecognizer = DragRecognizerFor(Dialog, {\n        onlyFrom:       '.Titlebar,.leftResizer,.middleResizer,.rightResizer',\n        neverFrom:      '.CloseButton',\n        Threshold:      4,\n        onDragStarted:  (x:number,y:number, dx:number,dy:number, Event:PointerEvent) => {\n          let ClassList = (Event.target as HTMLElement).classList; Dialog._DragMode = undefined\n          switch (true) {\n            case ClassList.contains('leftResizer'):   Dialog._DragMode = 'resize-sw'; break\n            case ClassList.contains('middleResizer'): Dialog._DragMode = 'resize-s';  break\n            case ClassList.contains('rightResizer'):  Dialog._DragMode = 'resize-se'; break\n            default:                                  Dialog._DragMode = 'drag'\n          }\n          Dialog._DragOffset = {\n            x:Dialog.x, Width:Dialog.Width,\n            y:Dialog.y, Height:Dialog.Height\n          }\n          handleDrag(x,y, dx,dy)\n        },\n        onDragContinued: handleDrag,\n        onDragFinished:  handleDragAndFinish,\n        onDragCancelled: handleDragAndFinish,\n      })\n\n      function onClose (Event:MouseEvent) {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (closeable !== false) { PropSet.ProtoUX.closeDialog(Dialog.Name) }\n      }\n\n      const CSSGeometry = (\n        `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n      )\n\n      return html`<div class=${ClassesWith('PUX ResizableDialog',Classes)} id=${Id} style=\"\n        ${Style || ''}; ${CSSGeometry}; z-index:${z || 2000000};\n      \" ...${otherProps}>\n        <div class=\"ContentPane\">\n          ${(WidgetList || []).map(\n            (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n          )}\n        </div>\n\n        <div class=\"Titlebar\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        >\n          <div class=\"Title\">${Title}</div>\n          <img class=\"CloseButton\" src=\"${PropSet.ProtoUX._ImageFolder}/xmark.png\"\n            style=\"visibility:${closeable === false ? 'hidden' : 'visible'}\"\n            onClick=${onClose}/>\n        </div>\n\n        <div class=\"leftResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n        <div class=\"middleResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n        <div class=\"rightResizer\"\n          onPointerDown=${DragRecognizer} onPointerUp=${DragRecognizer}\n          onPointerMove=${DragRecognizer} onPointerCancel=${DragRecognizer}\n        />\n      </>`\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                              PUX_WidgetView                              --\n//------------------------------------------------------------------------------\n\n  class PUX_WidgetView extends Component {\n    public state:Indexable = { Value:0 }\n\n    public rerender () {\n      (this as Component).setState({ Value:this.state.Value+1 })\n    }\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      if ((PropSet.hidden == true) || (Widget.hidden == true)) {\n        return ''\n      }\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, hidden,View,\n        WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      switch (Widget.Type) {\n        case 'Group':                                  // an invisible container\n          return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"${CSSGeometry} ${Style || ''}\" ...${otherProps}>\n            ${(WidgetList || []).map(\n              (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n            )}\n          </div>`\n//      case 'Container':                            // a box with inner widgets\n        case 'Box':                                 // without any inner widgets\n          return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"\n            ${CSSGeometry} ${Style || ''}\n          \" ...${otherProps} key=${Widget.Name}/>`\n        default:                         // default rendering like a \"container\"\n          const WidgetView = ProtoUX.WidgetViewForType(Widget.Type)\n          if (WidgetView == null) {\n            const {\n              Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, hidden,View,\n              WidgetList, ...otherProps\n            } = Widget\n\n            return html`<div class=\"PUX Widget ${Classes}\" id=${Id} style=\"\n              ${CSSGeometry} ${Style || ''}\n            \" ...${otherProps}>\n              ${Value || ''}\n              ${(WidgetList || []).map(\n                (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n              )}\n            </div>`\n          } else {\n            return html`<${WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX} key=${Widget.Name}/>`\n          }\n      }\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                         PUX_horizontalSeparator                          --\n//------------------------------------------------------------------------------\n\n  class PUX_horizontalSeparator extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX horizontalSeparator Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('horizontalSeparator',PUX_horizontalSeparator)\n\n//------------------------------------------------------------------------------\n//--                          PUX_verticalSeparator                           --\n//------------------------------------------------------------------------------\n\n  class PUX_verticalSeparator extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX verticalSeparator Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('verticalSeparator',PUX_verticalSeparator)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Badge                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Badge extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      Value = (''+(Value || '')).trim()\n      switch (true) {\n        case (Value === ''):     return ''\n        case (Value.length > 1): Value = '#'\n        default: return html`<div class=${ClassesWith('PUX Badge Widget',Classes)} id=${Id} style=\"\n          ${CSSGeometry} ${Style || ''}\n        \" ...${otherProps}>${Value}</div>`\n      }\n    }\n  }\n  ProtoUX.registerWidgetView('Badge',PUX_Badge)\n\n//------------------------------------------------------------------------------\n//--                               PUX_HTMLView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_HTMLView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX HTMLView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}\n        dangerouslySetInnerHTML=${{__html:Value}}\n      />`\n    }\n  }\n  ProtoUX.registerWidgetView('HTMLView',PUX_HTMLView)\n\n//------------------------------------------------------------------------------\n//--                               PUX_TextView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TextView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX TextView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>${Value}</>`\n    }\n  }\n  ProtoUX.registerWidgetView('TextView',PUX_TextView)\n\n//------------------------------------------------------------------------------\n//--                              PUX_ImageView                               --\n//------------------------------------------------------------------------------\n\n  class PUX_ImageView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        ImageScaling, ImageAlignment, WidgetList, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<img class=${ClassesWith('PUX ImageView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''};\n        object-fit:${ImageScaling === 'stretch' ? 'fill ' : ImageScaling};\n        object-position:${ImageAlignment};\n      \" ...${otherProps} src=${Value}/>`\n    }\n  }\n  ProtoUX.registerWidgetView('ImageView',PUX_ImageView)\n\n//------------------------------------------------------------------------------\n//--                               PUX_WebView                                --\n//------------------------------------------------------------------------------\n\n  class PUX_WebView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        PermissionsPolicy, allowsFullscreen, SandboxPermissions,\n        ReferrerPolicy, WidgetList, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const DefaultSandboxPermissions = (\n        'allow-downloads allow-forms allow-modals allow-orientation-lock ' +\n        'allow-pointer-lock allow-popups allow-same-origin allow-scripts'\n      )\n\n      return html`<iframe class=${ClassesWith('PUX WebView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps} src=${Value}\n        allow=${PermissionsPolicy} allowfullscreen=${allowsFullscreen}\n        sandbox=${SandboxPermissions || DefaultSandboxPermissions}\n        referrerpolicy=${ReferrerPolicy}\n      />`\n    }\n  }\n  ProtoUX.registerWidgetView('WebView',PUX_WebView)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Icon                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Icon extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Color,\n        disabled,onClick, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let PUX = PropSet.ProtoUX, ImageFolder = PUX.ImageFolder\n      if ((Value != null) && (Value.trim() !== '')) {\n        Value = Value.trim().replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      function _onClick (Event:PointerEvent) {\n        if (disabled == true) {\n          Event.stopPropagation()\n          Event.preventDefault()\n        } else {\n          if (typeof onClick === 'function') { onClick(Event) }\n        }\n      }\n\n      return html`<div class=${ClassesWith('PUX Icon Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" disabled=${disabled}><div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; width:100%; height:100%;\n        -webkit-mask-image:${Value};         mask-image:${Value};\n        -webkit-mask-size:contain;           mask-size:contain;\n        -webkit-mask-position:center center; mask-position:center center;\n        background-color:${Color || 'black'};\n      \" onClick=${_onClick} ...${otherProps}/></>`\n    }\n  }\n  ProtoUX.registerWidgetView('Icon',PUX_Icon)\n\n//------------------------------------------------------------------------------\n//--                            PUX_PseudoDropDown                            --\n//------------------------------------------------------------------------------\n\n  class PUX_PseudoDropDown extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        Value,Color,Options, disabled,onInput, View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let PUX = PropSet.ProtoUX, ImageFolder = PUX.ImageFolder\n      if ((Value != null) && (Value.trim() !== '')) {\n        Value = Value.trim().replace(/url\\(\"\\/images\\//g,'url(\"'+ImageFolder)\n      }\n\n      function _onInput (Event:any) {\n        if (disabled == true) {\n          Event.stopPropagation()\n          Event.preventDefault()\n        } else {\n          if (typeof onInput === 'function') { onInput(Event) }\n        }\n      }\n\n      return html`<div class=${ClassesWith('PUX PseudoDropDown Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \"><div style=\"\n        display:block; position:absolute;\n        left:0px; top:0px; width:100%; height:100%;\n        -webkit-mask-image:${Value};         mask-image:${Value};\n        -webkit-mask-size:contain;           mask-size:contain;\n        -webkit-mask-position:center center; mask-position:center center;\n        background-color:${Color || 'black'};\n      \" ...${otherProps}/>\n        <select onInput=${_onInput}>\n          ${ValueIsListSatisfying(Options,ValueIsString)\n            ? html`\n                <option value=\"\" disabled selected>please select</option>\n                ${(Options || []).map(\n                  (Option:string) => html`<option>${Option}</>`\n                )}\n              `\n            : Options\n          }\n        </select>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('PseudoDropDown',PUX_PseudoDropDown)\n\n//------------------------------------------------------------------------------\n//--                              PUX_Button                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Button extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Button Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <button ...${otherProps}>${Value || ''}</button>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Button',PUX_Button)\n\n//------------------------------------------------------------------------------\n//--                               PUX_Checkbox                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Checkbox extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let { checked,indeterminate } = PropSet\n      if (checked       == null) { checked       = (Value == true)}\n      if (indeterminate == null) { indeterminate = (Value == null) }\n\n      return html`<div class=${ClassesWith('PUX Checkbox Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"checkbox\" checked=${checked} indeterminate=${indeterminate} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Checkbox',PUX_Checkbox)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Radiobutton                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Radiobutton extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let { checked } = PropSet\n      if (checked == null) { checked = (Value == true)}\n\n      return html`<div class=${ClassesWith('PUX Radiobutton Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"radio\" checked=${checked} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Radiobutton',PUX_Radiobutton)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Gauge                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Gauge extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Gauge Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <meter value=${Value || ''} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Gauge',PUX_Gauge)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Progressbar                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Progressbar extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Progressbar Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <progress value=${Value || ''} ...${otherProps}/>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Progressbar',PUX_Progressbar)\n\n//------------------------------------------------------------------------------\n//--                                PUX_Slider                                --\n//------------------------------------------------------------------------------\n\n  const HashmarkPattern = /^\\s*(\\d+(?:[.]\\d+)?|\\d*[.](?:\\d*))(?:\\s*:\\s*([^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]+))?$/\n\n  class PUX_Slider extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Hashmarks,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let HashmarkList:any = '', HashmarkId\n      if (Array.isArray(Hashmarks) && (Hashmarks.length > 0)) {\n        HashmarkId = Id + '-Hashmarks'\n\n        HashmarkList = html`\\n<datalist id=${HashmarkId}>\n          ${Hashmarks.map((Item:string) => {\n            const Label = Item.replace(/:.*$/,'').trim()\n            const Value = Item.replace(/^[^:]+:/,'').trim()\n\n            return html`<option label=${Label} value=${Value}></option>`\n          })}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX Slider Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"range\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)} list=${HashmarkId}\n        />\n      </div>${HashmarkList}`\n    }\n  }\n  ProtoUX.registerWidgetView('Slider',PUX_Slider)\n\n//------------------------------------------------------------------------------\n//--                            PUX_TextlineInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_TextlineInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX TextlineInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"text\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('TextlineInput',PUX_TextlineInput)\n\n//------------------------------------------------------------------------------\n//--                            PUX_PasswordInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_PasswordInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX PasswordInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <input type=\"password\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('PasswordInput',PUX_PasswordInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_NumberInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_NumberInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX NumberInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"number\" value=${Value == null ? '' : Value} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('NumberInput',PUX_NumberInput)\n\n//------------------------------------------------------------------------------\n//--                           PUX_PhoneNumberInput                           --\n//------------------------------------------------------------------------------\n\n  class PUX_PhoneNumberInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX PhoneNumberInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"tel\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('PhoneNumberInput',PUX_PhoneNumberInput)\n\n//------------------------------------------------------------------------------\n//--                          PUX_EMailAddressInput                           --\n//------------------------------------------------------------------------------\n\n  class PUX_EMailAddressInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX EMailAddressInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"email\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('EMailAddressInput',PUX_EMailAddressInput)\n\n//------------------------------------------------------------------------------\n//--                               PUX_URLInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_URLInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX URLInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"url\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('URLInput',PUX_URLInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TimeInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TimeInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX TimeInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"time\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('TimeInput',PUX_TimeInput)\n\n//------------------------------------------------------------------------------\n//--                            PUX_DateTimeInput                             --\n//------------------------------------------------------------------------------\n\n  class PUX_DateTimeInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX DateTimeInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"datetime-local\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('DateTimeInput',PUX_DateTimeInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_DateInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_DateInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX DateInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"date\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('DateInput',PUX_DateInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_WeekInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_WeekInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX WeekInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"week\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('WeekInput',PUX_WeekInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_MonthInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_MonthInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX MonthInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"month\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('MonthInput',PUX_MonthInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_SearchInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_SearchInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX SearchInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"search\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('SearchInput',PUX_SearchInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_FileInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_FileInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View,\n        Placeholder, onDrop, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function onDragEnter (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onDragOver (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onFileDrop (Event:Event):void {// leaves \"onDrop\" free as a Prop.\n        Event.stopPropagation()\n        Event.preventDefault()\n\n        if (typeof onDrop === 'function') { onDrop(Event) }\n      }               // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n      return html`<label class=${ClassesWith('PUX FileInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onFileDrop}>\n        <input type=\"file\" style=\"display:none\" ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n        ${(Value || '') === '' ? '' : html`<span>${Value}</span>`}\n        ${(Value || '') === '' ? ((Placeholder || '') === '' ? '' : html`<span>${Placeholder}</span>`) : ''}\n      </label>`\n    }\n  }\n  ProtoUX.registerWidgetView('FileInput',PUX_FileInput)\n\n//------------------------------------------------------------------------------\n//--                              PUX_ColorInput                              --\n//------------------------------------------------------------------------------\n\n  class PUX_ColorInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, Suggestions,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      let SuggestionList:any = '', SuggestionId\n      if (Array.isArray(Suggestions) && (Suggestions.length > 0)) {\n        SuggestionId = Id + '-Suggestions'\n\n        SuggestionList = html`<datalist id=${SuggestionId}>\n          ${Suggestions.map((Value:string) => html`<option value=${Value}></option>`)}\n        </datalist>`\n      }\n\n      return html`<div class=${ClassesWith('PUX ColorInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" list=${SuggestionId}>\n        <input type=\"color\" value=${Value || ''} ...${otherProps}\n          onBlur=${this.rerender.bind(this)}\n        />\n      </div>${SuggestionList}`\n    }\n  }\n  ProtoUX.registerWidgetView('ColorInput',PUX_ColorInput)\n\n//------------------------------------------------------------------------------\n//--                               PUX_DropDown                               --\n//------------------------------------------------------------------------------\n\n  class PUX_DropDown extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Options, Placeholder,\n        View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX DropDown Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <select ...${otherProps} onBlur=${this.rerender.bind(this)}>\n          ${Placeholder == null\n            ? ''\n            : html`<option value=\"\" disabled>${Placeholder}</option>`\n          }\n          ${(Options || []).map(\n            (Option:string) => html`<option selected=${Option === Value}>${Option}</>`\n          )}\n        </select>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('DropDown',PUX_DropDown)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TextInput                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TextInput extends PUX_WidgetView {\n    private _ValueToShow:any\n\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value, View, ...otherProps\n      } = Widget\n\n      if (document.activeElement === (this as Component).base) {\n        Value = this._ValueToShow\n      } else {\n        this._ValueToShow = Value\n      }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX TextInput Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        <textarea ...${otherProps} value=${Value || ''}\n          onBlur=${this.rerender.bind(this)}\n        ></textarea>\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('TextInput',PUX_TextInput)\n\n//------------------------------------------------------------------------------\n//--                             PUX_FileDropArea                             --\n//------------------------------------------------------------------------------\n\n  class PUX_FileDropArea extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, onDrop,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function onDragEnter (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onDragOver (Event:Event):void {\n        Event.stopPropagation()\n        Event.preventDefault()\n      }\n\n      function onFileDrop (Event:Event):void {// leaves \"onDrop\" free as a Prop.\n        Event.stopPropagation()\n        Event.preventDefault()\n\n        if (typeof onDrop === 'function') { onDrop(Event) }\n      }               // nota bene: \"files\" is now in \"Event.dataTransfer.files\"\n\n      return html`<label class=${ClassesWith('PUX FileDropArea Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" onDragEnter=${onDragEnter} onDragOver=${onDragOver} onDrop=${onFileDrop}>\n        <input type=\"file\" ...${otherProps}/>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </label>`\n    }\n  }\n  ProtoUX.registerWidgetView('FileDropArea',PUX_FileDropArea)\n\n//------------------------------------------------------------------------------\n//--                              PUX_Accordion                               --\n//------------------------------------------------------------------------------\n\n  class PUX_Accordion extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Accordion Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_Fold} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Accordion',PUX_Accordion)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Fold                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Fold extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,Expansion,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const self = this\n      function onClick () {\n        Widget.Expansion = ! Widget.Expansion\n        self.rerender()\n      }\n\n      return html`<div class=${ClassesWith('PUX Fold Widget',Classes)} id=${Id} style=\"\n        ${Style || ''}; left:0px; top:0px; width:100%; height:auto;\n      \" ...${otherProps}>\n        <div class=\"PUX Fold-Header\">\n          <img class=\"PUX Fold-Expander\" src=${Expansion\n            ? `${PropSet.ProtoUX._ImageFolder}caret-down.png`\n            : `${PropSet.ProtoUX._ImageFolder}caret-right.png`\n          } onClick=${onClick}\n          />\n          <div class=\"PUX Fold-Title\">${Value}</>\n        </div>\n\n        ${Expansion\n          ? html`<div class=\"PUX Fold-Content\" style=\"\n              height:${Height}px; border:none;\n            \">\n              ${(WidgetList || []).map(\n                (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n              )}\n            </>`\n          : ''\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Fold',PUX_Fold)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Deck                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Deck extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const activeIndex = (\n        Value == null ? 0 : (Value < 0 ? WidgetList.length+Value : Value)\n      )\n      const activeCard = (WidgetList || [])[activeIndex] || (WidgetList || [])[0]\n\n      return html`<div class=${ClassesWith('PUX Deck Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${activeCard == null\n          ? html`<${PUX_centered}><span>(no card)</span></>`\n          : html`<${PUX_Card} Widget=${activeCard} ProtoUX=${PropSet.ProtoUX}/>`\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Deck',PUX_Deck)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Card                                 --\n//------------------------------------------------------------------------------\n\n  class PUX_Card extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      return html`<div class=${ClassesWith('PUX Card Widget',Classes)} id=${Id} style=\"\n        border:none; ${Style || ''};\n        left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto\n      \" ...${otherProps}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('Card',PUX_Card)\n\n//------------------------------------------------------------------------------\n//--                              PUX_TabStrip                               --\n//------------------------------------------------------------------------------\n\n  class PUX_TabStrip extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      const activeIndex = (\n        Value == null ? 0 : (Value < 0 ? WidgetList.length+Value : Value)\n      )\n      const activeTab = (WidgetList || [])[activeIndex] || (WidgetList || [])[0]\n\n      const self = this as Component\n      function activateTab (Index:number):void {\n        (self.base as HTMLElement).dispatchEvent(new CustomEvent('ValueChange',{ detail:Index }))\n      }\n\n      return html`<div class=${ClassesWith('PUX TabStrip Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${(WidgetList || []).map((Widget:Indexable, Index:number) => html`\n          <${PUX_Tab} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}\n            active=${Widget === activeTab}\n            onClick=${() => activateTab(Index)}\n          />\n        `\n        )}\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('TabStrip',PUX_TabStrip)\n\n//------------------------------------------------------------------------------\n//--                                 PUX_Tab                                  --\n//------------------------------------------------------------------------------\n\n  class PUX_Tab extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      const {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height, Value,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const { active,onClick } = PropSet\n\n      return html`<div class=${ClassesWith('PUX ${active ? \"active\" : \"\"} Tab Widget',Classes)} id=${Id} style=\"\n        ${Style || ''}; width:${Width}px; border:none; border-width:0px 0px 4px 0px;\n        border-style:solid; border-bottom-color:${active ? 'black' : 'transparent'}\n      \" ...${otherProps} onClick=${onClick}>\n        ${(WidgetList || []).map(\n          (Widget:Indexable) => html`<${PUX_WidgetView} Widget=${Widget} ProtoUX=${PropSet.ProtoUX}/>`\n        )}\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Tab',PUX_Tab)\n\n//------------------------------------------------------------------------------\n//--                             PUX_FlatListView                             --\n//------------------------------------------------------------------------------\n\n  class PUX_FlatListView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        List, ItemRenderer, Placeholder, selectedIndices, SelectionLimit,\n        onSelectionChange, onItemSelected, onItemDeselected,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      expectArray                       ('item list',List)\n      allowFunction            ('list item renderer',ItemRenderer)\n      allowTextline              ('list placeholder',Placeholder)\n      allowListSatisfying('list of selected indices',selectedIndices, ValueIsOrdinal)\n      allowOrdinal                ('selection limit',SelectionLimit)\n      allowFunction     ('selection change callback',onSelectionChange)\n      allowFunction       ('item selection callback',onItemSelected)\n      allowFunction     ('item deselection callback',onItemDeselected)\n\n      if (ItemRenderer    == null) { ItemRenderer    = (Item:any) => html`${Item+''}` }\n      if (Placeholder     == null) { Placeholder     = '(empty)' }\n      if (selectedIndices == null) { selectedIndices = [] }\n      if (SelectionLimit  == null) { SelectionLimit  = 1 }\n\n      const selectedIndexSet:Indexable = Object.create(null)\n        selectedIndices = selectedIndices.filter((selectedIndex:number) => {\n          if (\n            ValueIsOrdinal(selectedIndex) &&\n            (selectedIndex >= 0) && (selectedIndex < List.length) &&\n            ! (selectedIndex in selectedIndexSet)\n          ) {\n            selectedIndexSet[selectedIndex] = true\n            return true\n          } else {\n            return false\n          }\n        })\n      if (selectedIndices.length > SelectionLimit) {\n        const deselectedIndices = selectedIndices.slice(SelectionLimit)\n\n        selectedIndices.length = SelectionLimit\n        if (onSelectionChange != null) {\n          onSelectionChange(selectedIndices)\n        }\n\n        if (onItemDeselected != null) {\n          deselectedIndices.forEach((deselectedIndex:number) => {\n            onItemDeselected(List[deselectedIndex],deselectedIndex)\n          })\n        }\n      }\n\n      function onClick (Event:MouseEvent, Index:number):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (SelectionLimit === 0) { return }\n\n        let SelectionChanged:boolean = false\n        let IndicesToSelect:number[], IndicesToDeselect:number[]\n        if (Event.shiftKey || Event.metaKey) {\n          SelectionChanged = true\n          if (ItemIsSelected(Index)) {\n            IndicesToDeselect = [Index]\n            selectedIndices   = selectedIndices.filter(\n              (selectedIndex:number) => (selectedIndex !== Index)\n            )\n          } else {\n            if (selectedIndices.length === SelectionLimit) {\n              IndicesToDeselect = [selectedIndices.shift()]\n            }\n            IndicesToSelect = [Index]\n            selectedIndices.push(Index)\n          }\n        } else {\n          IndicesToDeselect = selectedIndices.filter(\n            (selectedIndex:number) => (selectedIndex !== Index)\n          )\n          SelectionChanged = ! ItemIsSelected(Index)\n          IndicesToSelect  = (SelectionChanged ? [Index] : [])\n          selectedIndices  = [Index]\n        }\n\n        if (SelectionChanged && (onSelectionChange != null)) {\n          onSelectionChange(selectedIndices)\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((IndicesToDeselect != null) && (onItemDeselected != null)) {\n          IndicesToDeselect.forEach((deselectedIndex:number) => {\n            onItemDeselected(List[deselectedIndex],deselectedIndex)\n          })\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((IndicesToSelect != null) && (onItemSelected != null)) {\n          IndicesToSelect.forEach((selectedIndex:number) => {\n            onItemSelected(List[selectedIndex],selectedIndex)\n          })\n        }\n      }\n\n      function ItemIsSelected (Index:number):boolean {\n        return (Index in selectedIndexSet)\n      }\n\n      return html`<div class=${ClassesWith('PUX FlatListView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${\n          List.length === 0\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : List.map((Item:any, Index:number) => html`<div\n              class=${ItemIsSelected(Index) ? 'selected' : undefined}\n              dangerouslySetInnerHTML=${{\n                __html:ItemRenderer(Item, Index, ItemIsSelected(Index))\n              }}\n              onClick=${(Event:MouseEvent) => onClick(Event,Index)}\n            />`)\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('FlatListView',PUX_FlatListView)\n\n//------------------------------------------------------------------------------\n//--                             PUX_NestedListView                             --\n//------------------------------------------------------------------------------\n\n  class PUX_NestedListView extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, Anchoring, x,y, Width,Height,\n        List, ItemRenderer, Placeholder, LabelOfItem, ContentListOfItem,\n        selectedPaths, SelectionLimit, SelectionMode,\n        onSelectionChange, onItemSelected, onItemDeselected,\n        onItemDoubleClicked,\n        expandedPaths, Indentation,\n        onExpansionChange, onItemExpanded, onItemCollapsed,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      function ValueIsOrdinalList (Value:any):boolean {\n        return ValueIsListSatisfying(Value,ValueIsOrdinal)\n      }\n\n      expectArray                     ('item list',List)\n      allowFunction          ('list item renderer',ItemRenderer)\n      allowTextline            ('list placeholder',Placeholder)\n      expectFunction  ('label extraction function',LabelOfItem)\n      expectFunction('content extraction function',ContentListOfItem)\n      allowListSatisfying('list of selected paths',selectedPaths, ValueIsOrdinalList)\n      allowOrdinal              ('selection limit',SelectionLimit)\n      allowOneOf                 ('selection mode',SelectionMode, ['same-container','any-container'])\n      allowFunction   ('selection change callback',onSelectionChange)\n      allowFunction     ('item selection callback',onItemSelected)\n      allowFunction   ('item deselection callback',onItemDeselected)\n      allowFunction  ('item double-click callback',onItemDoubleClicked)\n      allowListSatisfying('list of expanded paths',expandedPaths, ValueIsOrdinalList)\n      allowOrdinal                  ('indentation',Indentation)\n      allowFunction   ('expansion change callback',onExpansionChange)\n      allowFunction     ('item expansion callback',onItemExpanded)\n      allowFunction      ('item collapse callback',onItemCollapsed)\n\n      function DefaultRenderer (Item:any, Path:number[]):any {\n        return html`<div class=\"ItemLabel\">${LabelOfItem(Item)}</div>`\n      }\n\n      if (ItemRenderer   == null) { ItemRenderer   = DefaultRenderer }\n      if (Placeholder    == null) { Placeholder    = '(empty)' }\n      if (selectedPaths  == null) { selectedPaths  = [] }\n      if (SelectionLimit == null) { SelectionLimit = 1 }\n      if (SelectionMode  == null) { SelectionMode  = 'same-container' }\n      if (expandedPaths  == null) { expandedPaths  = [] }\n      if (Indentation    == null) { Indentation    = 10 }\n\n      function ItemAtPath (Path:number[]):any {\n        let Item:any = List[Path[0]]\n          for (let i = 1, l = Path.length; i < l; i++) {\n            if (Item == null) { return undefined }\n\n            const ContentList = ContentListOfItem(Item)\n            if (! ValueIsArray(ContentList)) { return undefined }\n\n            Item = ContentList[Path[i]]\n          }\n        return Item\n      }\n\n      function ItemAtPathExists (Path:number[]):boolean {\n        return (ItemAtPath(Path) != null)\n      }\n\n      function PathsAreEqual (PathA:number[],PathB:number[]):boolean {\n        return (\n          (PathA.length === PathB.length) &&\n          PathA.every((Item,Index) => Item === PathB[Index])\n        )\n      }\n\n      function IndexOfPathIn (Path:number[],PathList:number[][]):number {\n        for (let i = 0, l = PathList.length; i < l; i++) {\n          if (PathsAreEqual(Path,PathList[i])) { return i }\n        }\n        return -1\n      }\n\n      function ItemInContainer (ItemPath:number[],ContainerPath:number[]):boolean {\n        return (\n          (ItemPath.length === ContainerPath.length+1) &&\n          PathsAreEqual(ItemPath.slice(0,ContainerPath.length),ContainerPath)\n        )\n      }\n\n      function ItemNotInContainer (ItemPath:number[],ContainerPath:number[]):boolean {\n        return (\n          (ItemPath.length !== ContainerPath.length+1) ||\n          ! PathsAreEqual(ItemPath.slice(0,ContainerPath.length),ContainerPath)\n        )\n      }\n\n      function ItemIsSelected (Path:number[]):boolean { return (IndexOfPathIn(Path,selectedPaths) >= 0) }\n      function ItemIsExpanded (Path:number[]):boolean { return (IndexOfPathIn(Path,expandedPaths) >= 0) }\n\n      selectedPaths = selectedPaths.filter(\n        (Path:number[]) => ItemAtPathExists(Path)\n      )\n\n      selectedPaths = selectedPaths.filter((Path:number[], Index:number) => (\n        IndexOfPathIn(Path,selectedPaths) === Index\n      ))\n\n      if ((selectedPaths.length > 1) && (SelectionMode === 'same-container')) {\n        const ContainerPath = selectedPaths[0].slice(0,selectedPaths[0].length-1)\n        selectedPaths = selectedPaths.filter((Path:number[]) => (\n          ItemInContainer(Path,ContainerPath)\n        ))\n      }\n\n      expandedPaths = expandedPaths.filter(\n        (Path:number[]) => ItemAtPathExists(Path)\n      )\n\n      expandedPaths = expandedPaths.filter((Path:number[], Index:number) => (\n        IndexOfPathIn(Path,expandedPaths) === Index\n      ))\n\n      function processSelectionClick (\n        Event:PointerEvent, Item:any, ItemPath:number[]\n      ):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        if (SelectionLimit === 0) { return }\n\n        let SelectionChanged:boolean = false\n        let PathsToSelect:number[][], PathsToDeselect:number[][]\n\n        if (Event.shiftKey || Event.metaKey) {\n          SelectionChanged = true\n          if (ItemIsSelected(ItemPath)) {\n            PathsToDeselect = [ItemPath]\n            selectedPaths   = selectedPaths.filter(\n              (Path:number[]) => ! PathsAreEqual(ItemPath,Path)\n            )\n          } else {\n            const ContainerPath = ItemPath.slice(0,ItemPath.length-1)\n            PathsToDeselect = selectedPaths.filter((Path:number[]) => (\n              ! ItemInContainer(Path,ContainerPath)\n            ))\n            selectedPaths = selectedPaths.filter((Path:number[]) => (\n              ItemInContainer(Path,ContainerPath)\n            ))\n\n            if (selectedPaths.length === SelectionLimit) {\n              PathsToDeselect.push([selectedPaths.shift()])\n            }\n            PathsToSelect = [ItemPath]\n            selectedPaths.push(ItemPath)\n          }\n        } else {\n          PathsToDeselect = selectedPaths.filter(\n            (Path:number[]) => ! PathsAreEqual(ItemPath,Path)\n          )\n          SelectionChanged = ! ItemIsSelected(ItemPath)\n          PathsToSelect    = (SelectionChanged ? [ItemPath] : [])\n          selectedPaths    = [ItemPath]\n        }\n\n        if (SelectionChanged && (onSelectionChange != null)) {\n          onSelectionChange(selectedPaths)\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((PathsToDeselect != null) && (onItemDeselected != null)) {\n          PathsToDeselect.forEach((Path:number[]) => {\n            onItemDeselected(ItemAtPath(Path),Path)\n          })\n        }\n\n// @ts-ignore TS2454 let's check IF variables were assigned\n        if ((PathsToSelect != null) && (onItemSelected != null)) {\n          PathsToSelect.forEach((Path:number[]) => {\n            onItemSelected(ItemAtPath(Path),Path)\n          })\n        }\n      }\n\n      function processDoubleClick (\n        Event:PointerEvent, Item:any, ItemPath:number[]\n      ):void {\n        if (onItemDoubleClicked != null) {\n          Event.stopImmediatePropagation()\n          Event.preventDefault()\n\n          onItemDoubleClicked(Item,ItemPath,Event)\n        }\n      }\n\n      function processExpansionClick (\n        Event:PointerEvent, Item:any, Path:number[]\n      ):void {\n        Event.stopImmediatePropagation()\n        Event.preventDefault()\n\n        let ExpansionIndex = IndexOfPathIn(Path,expandedPaths)\n        if (ExpansionIndex < 0) {\n          expandedPaths.push(Path)\n        } else {\n          expandedPaths.splice(ExpansionIndex,1)\n        }\n\n        if (onExpansionChange != null) {\n          onExpansionChange(expandedPaths)\n        }\n\n        if (ExpansionIndex < 0) {\n          if (onItemExpanded  != null) { onItemExpanded(Item,Path) }\n        } else {\n          if (onItemCollapsed != null) { onItemCollapsed(Item,Path) }\n        }\n      }\n\n      function renderedItem (Item:any, Path:number[]):any {\n        const Offset = (Path.length-1) * Indentation\n\n        const isSelected = ItemIsSelected(Path)\n        const isExpanded = ItemIsExpanded(Path)\n\n        let ContentList = ContentListOfItem(Item)\n        if (! ValueIsArray(ContentList)) { ContentList = [] }\n\n        const hasContent = (ContentList.length > 0)\n\n        function onSelectionClick (Event:PointerEvent) {\n          processSelectionClick(Event, Item,Path)\n        }\n\n        function onDoubleClick (Event:PointerEvent) {\n          processDoubleClick(Event, Item,Path)\n        }\n\n        function onExpansionClick (Event:PointerEvent) {\n          processExpansionClick(Event, Item,Path)\n        }\n\n        return html`<div class=\"ItemView\" style=\"padding-left:${Offset}px\">\n          <div class=\"ItemLine ${isSelected ? 'selected' : ''}\"\n            onClick=${onSelectionClick} onDblClick=${onDoubleClick}\n          >\n            ${hasContent\n              ? (isExpanded\n                  ? html`<img class=\"ItemExpander\" src=\"${PropSet.ProtoUX._ImageFolder}/caret-down.png\"  onClick=${onExpansionClick}/>`\n                  : html`<img class=\"ItemExpander\" src=\"${PropSet.ProtoUX._ImageFolder}/caret-right.png\" onClick=${onExpansionClick}/>`\n                )\n              : html`<img class=\"ItemIcon\" src=\"${PropSet.ProtoUX._ImageFolder}/circle.png\"/>`\n            } ${ItemRenderer(Item,Path)}\n          </div>\n          ${hasContent && isExpanded\n            ? ContentList.map((Item:any, Index:number) => renderedItem(Item,Path.concat(Index)))\n            : ''\n          }\n        </div>`\n      }\n\n\n\n      return html`<div class=${ClassesWith('PUX NestedListView Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \" ...${otherProps}>\n        ${\n          List.length === 0\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : List.map((Item:any, Index:number) => renderedItem(Item,[Index]))\n        }\n      </>`\n    }\n  }\n  ProtoUX.registerWidgetView('NestedListView',PUX_NestedListView)\n\n//------------------------------------------------------------------------------\n//--                             PUX_Placeholder                              --\n//------------------------------------------------------------------------------\n\n  class PUX_Placeholder extends PUX_WidgetView {\n    public render (PropSet:Indexable):any {\n      const Widget = PropSet.Widget\n      Widget.View = this\n\n      let {\n        Id, Type,Classes,Style, x,y, Width,Height, Substitute,Placeholder,\n        View, WidgetList, ...otherProps\n      } = Widget\n\n      allowFunction      ('Substitute',Substitute)\n      allowTextline('placeholder text',Placeholder)\n\n      if (Placeholder == null) { Placeholder = '(empty)' }\n\n      const CSSGeometry = (\n        (x != null) && (Width  != null) && (y != null) && (Height != null)\n        ? `left:${x}px; top:${y}px; width:${Width}px; height:${Height}px; right:auto; bottom:auto;`\n        : ''\n      )\n\n      return html`<div class=${ClassesWith('PUX Placeholder Widget',Classes)} id=${Id} style=\"\n        ${CSSGeometry} ${Style || ''}\n      \">\n        ${Substitute == null\n          ? html`<div class=\"centered\"><span>${Placeholder}</></>`\n          : html`<${Substitute} ...${otherProps}/>`\n        }\n      </div>`\n    }\n  }\n  ProtoUX.registerWidgetView('Placeholder',PUX_Placeholder)\n\n/**** ClassesWith ****/\n\n  function ClassesWith (Prefix:string, ClassNames:string):string {\n    const ClassSet = Object.create(null)\n\n    const combinedClasses = (\n      Prefix + ' ' + (ClassNames || '')\n    ).trim().replace(/\\s+/g,' ')\n\n    return combinedClasses.split(' ').filter((ClassName:string) => {\n      if (ClassName in ClassSet) {\n        return false\n      } else {\n        ClassSet[ClassName] = true\n        return true\n      }\n    }).join(' ')\n  }//------------------------------------------------------------------------------\n//--                               PUX_centered                               --\n//------------------------------------------------------------------------------\n\n  class PUX_centered extends Component {\n    public render (PropSet:Indexable):any {\n      return html`<div class=\"centered\">\n        ${PropSet.children}\n      </div>`\n    }\n  }\n\n\n"],"names":["_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","_excluded9","_excluded10","_excluded11","_excluded12","_excluded13","_excluded14","_excluded15","_excluded16","_excluded17","_excluded18","_excluded19","_excluded20","_excluded21","_excluded22","_excluded23","_excluded24","_excluded25","_excluded26","_excluded27","_excluded28","_excluded29","_excluded30","_excluded31","_excluded32","_excluded33","_excluded34","_excluded35","_excluded36","_excluded37","_excluded38","_excluded39","_excluded40","_excluded41","_excluded42","_excluded43","_excluded44","_excluded45","_t","_t2","_t3","_t4","_t5","_t6","_t7","_t8","_t9","_t10","_t11","_t12","_t13","_t14","_t15","_t16","_t17","_t18","_t19","_t20","_t21","_t22","_t23","_t24","_t25","_t26","_t27","_t28","_t29","_t30","_t31","_t32","_t33","_t34","_t35","_t36","_t37","_t38","_t39","_t40","_t41","_t42","_t43","_t44","_t45","_t46","_t47","_t48","_t49","_t50","_t51","_t52","_t53","_t54","_t55","_t56","_t57","_t58","_t59","_t60","_t61","_t62","_t63","_t64","_t65","_t66","_t67","_t68","_t69","_t70","_t71","_t72","_t73","_t74","_t75","_t76","_t77","_t78","_t79","_t80","_t81","_t82","_t83","_t84","_t85","_t86","_t87","_t88","_t89","_t90","_t91","_t92","_t93","_t94","_t95","_t96","_t97","_t98","_t99","_t100","_t101","_t102","_t103","_t104","_t105","_t106","_t107","_t108","_t109","_t110","_t111","_t112","_t113","_t114","_2","t","observe","computed","hyperactiv","Stylesheet","document","createElement","throwError","Message","Match","exec","Error","namedError","name","throwReadOnlyError","Name","quoted","setAttribute","innerHTML","head","appendChild","DragRecognizerForWidget","WeakMap","DragRecognizerFor","Widget","OptionSet","PointerTarget","DragRecognizer","get","DummyCallback","consumeEvent","Event","stopImmediatePropagation","preventDefault","x0","y0","onlyFrom","neverFrom","Threshold","onDragStarted","onDragContinued","onDragFinished","onDragCancelled","State","startDragging","pageX","x","pageY","y","Math","round","abortDragging","wasBusy","target","releasePointerCapture","pointerId","undefined","type","isPrimary","HTMLElement","matches","button","setPointerCapture","onPointerDown","console","log","continueDragging","onPointerMove","finishDragging","onPointerUp","onPointerCancel","set","DragClickRecognizerForWidget","DragClickRecognizerFor","DragClickRecognizer","onClicked","MultiClickTimeSpan","onMultiClick","lastClickTime","lastClickType","now","Date","ProtoUX","constructor","IdPrefix","_IdPrefix","_ImageFolder","_ScreenSet","this","_DialogSet","_observed","deep","_UpdaterList","_StartScreen","_openScreen","_openDialogs","_View","ImageFolder","newFolder","trim","endsWith","Style","Element","getElementById","newStyle","StyleId","replace","ScreenSet","newSet","ScreenName","Object","assign","dX","dY","dW","dH","observed","_","ScreenNamed","existingScreenNamed","Screen","packScreen","padX","padY","packedGeometry","Width","Height","WidgetList","forEach","hidden","openScreen","rerender","closeScreen","ScreenIsOpen","startWithScreen","StartScreen","extractAllDialogs","i","length","Type","ValueIsNonEmptyString","error","splice","DialogNamed","DialogName","existingDialogNamed","Dialog","openDialog","DialogIndex","indexOf","push","onOpen","closeDialog","onClose","DialogIsOpen","openDialogs","slice","closeAllDialogs","DialogIsFrontMost","bringDialogToFront","WidgetNamed","WidgetName","l","existingWidgetNamed","WidgetOnScreen","WidgetOnDialog","existingWidgetOnScreen","existingWidgetOnDialog","WidgetInContainer","Container","existingWidgetInContainer","stuff","PropSet","stuffScreen","stuffDialog","stuffWidget","ValueIsStuff","fromScreen","from","concat","with","map","Property","innerWidget","Candidate","ValueIsPlainObject","ValueIsString","ValueIsListSatisfying","configure","configureScreen","configureDialog","configureWidget","self","Value","ValueIsFunction","Updater","updateWidget","update","updateScreen","updateDialog","View","updatedFrom","renderInto","render","html","PUX_View","registerWidgetView","Class","_WidgetViewRegistry","WidgetViewForType","create","Component","args","super","state","setState","frontmostDialog","pop","frontmostIsModal","isModal","PUX_ScreenView","PUX_DialogView","PUX_ModalLayer","Id","Classes","ClassesWith","PUX_WidgetView","PUX_ResizableDialogView","PUX_StandardDialogView","moveDialog","dx","dy","_DragOffset","z","moveDialogAndFinish","Title","closeable","otherProps","_objectWithoutPropertiesLoose","CSSGeometry","minWidth","minHeight","maxWidth","maxHeight","allowOrdinal","Infinity","max","handleDrag","_DragMode","resizeDialog","handleDragAndFinish","newWidth","min","ClassList","classList","contains","WidgetView","__html","ImageScaling","ImageAlignment","PermissionsPolicy","allowsFullscreen","SandboxPermissions","ReferrerPolicy","Color","disabled","onClick","stopPropagation","Options","onInput","Option","checked","indeterminate","_ValueToShow","Hashmarks","activeElement","base","HashmarkId","HashmarkList","Array","isArray","Item","Label","bind","Suggestions","SuggestionId","SuggestionList","Placeholder","onDrop","PUX_Fold","Expansion","activeCard","PUX_centered","PUX_Card","activeTab","Index","PUX_Tab","dispatchEvent","CustomEvent","detail","activateTab","active","Prefix","ClassNames","ClassSet","split","filter","ClassName","join","List","ItemRenderer","selectedIndices","SelectionLimit","onSelectionChange","onItemSelected","onItemDeselected","expectArray","allowFunction","allowTextline","allowListSatisfying","ValueIsOrdinal","selectedIndexSet","selectedIndex","deselectedIndices","deselectedIndex","ItemIsSelected","IndicesToSelect","IndicesToDeselect","SelectionChanged","shiftKey","metaKey","shift","LabelOfItem","ContentListOfItem","selectedPaths","SelectionMode","onItemDoubleClicked","expandedPaths","Indentation","onExpansionChange","onItemExpanded","onItemCollapsed","ValueIsOrdinalList","ItemAtPath","Path","ContentList","ValueIsArray","ItemAtPathExists","PathsAreEqual","PathA","PathB","every","IndexOfPathIn","PathList","ItemInContainer","ItemPath","ContainerPath","expectFunction","allowOneOf","renderedItem","Offset","isSelected","isExpanded","ItemIsExpanded","hasContent","PathsToSelect","PathsToDeselect","processSelectionClick","processDoubleClick","ExpansionIndex","processExpansionClick","Substitute","children"],"mappings":"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"}